<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sharpex2D</name>
    </assembly>
    <members>
        <member name="M:Sharpex2D.AttributeHelper.GetAttribute``1(System.Object)">
            <summary>
                Gets the Attribute.
            </summary>
            <typeparam name="T">The Attribute Type.</typeparam>
            <param name="obj">The Object.</param>
            <returns>Attribute.</returns>
        </member>
        <member name="M:Sharpex2D.AttributeHelper.GetAttribute``1(System.Type)">
            <summary>
                Gets the Attribute.
            </summary>
            <typeparam name="T">The Attribute Type.</typeparam>
            <param name="type">The Type.</param>
            <returns>Attribute.</returns>
        </member>
        <member name="M:Sharpex2D.AttributeHelper.TryGetAttribute``1(System.Type,``0@)">
            <summary>
                Trys to get the Attribute.
            </summary>
            <typeparam name="T">The Attribute Type.</typeparam>
            <param name="type">The Type.</param>
            <param name="value">The Value.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:Sharpex2D.AttributeHelper.TryGetAttribute``1(System.Object,``0@)">
            <summary>
                Trys to get the Attribute.
            </summary>
            <typeparam name="T">The Attribute Type.</typeparam>
            <param name="obj">The Object.</param>
            <param name="value">The Value.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:Sharpex2D.DeveloperAttribute.#ctor(System.String,System.String)">
            <summary>
                Initializes a new DeveloperAttribute class.
            </summary>
            <param name="name">The Name.</param>
            <param name="contact">The contact option.</param>
        </member>
        <member name="P:Sharpex2D.DeveloperAttribute.Developer">
            <summary>
                Gets the Developer name.
            </summary>
        </member>
        <member name="P:Sharpex2D.DeveloperAttribute.Contact">
            <summary>
                Gets the contact option.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.MM_WOM_OPEN">
            <summary>
                Open.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.MM_WOM_CLOSE">
            <summary>
                Close.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.MM_WOM_DONE">
            <summary>
                Done.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.CALLBACK_FUNCTION">
            <summary>
                Callbackfunction number.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.TIME_MS">
            <summary>
                Time in ms.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.TIME_SAMPLES">
            <summary>
                Time in samples.
            </summary>
        </member>
        <member name="F:Sharpex2D.NativeMethods.TIME_BYTES">
            <summary>
                Time in bytes.
            </summary>
        </member>
        <member name="M:Sharpex2D.NativeMethods.AllocConsole">
            <summary>
                Allocates the Console.
            </summary>
            <returns>Int32.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.GetConsoleWindow">
            <summary>
                Gets the console handle.
            </summary>
            <returns>IntPtr.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
                Shows a window specified by its handle.
            </summary>
            <param name="hWnd">The Handle.</param>
            <param name="nCmdShow">The Command.</param>
            <returns>Int32.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.SetConsoleTitle(System.String)">
            <summary>
                Sets the console title.
            </summary>
            <param name="lpConsoleTitle">The Title.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.XInputGetState(System.Int32,Sharpex2D.Framework.Input.XInput.XInputState@)">
            <summary>
                Gets the XInput state.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="pState">The InputState.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.XInputSetState(System.Int32,Sharpex2D.Framework.Input.XInput.XInputVibration@)">
            <summary>
                Sets the Input state.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="pVibration">The Vibration.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.XInputGetCapabilities(System.Int32,System.Int32,Sharpex2D.Framework.Input.XInput.XInputCapabilities@)">
            <summary>
                Gets the Capabilities.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="dwFlags">The dwFlags.</param>
            <param name="pCapabilities">The Capabilities.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.XInputGetBatteryInformation(System.Int32,System.Byte,Sharpex2D.Framework.Input.XInput.XInputBatteryInformation@)">
            <summary>
                Gets the Battery information.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="devType">The DevType.</param>
            <param name="pBatteryInformation">The BatteryInformation.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.DeleteDC(System.IntPtr)">
            <summary>
                Deletes the specified device context (DC).
            </summary>
            <param name="hdc">A handle to the device context.</param>
            <returns>
                If the function succeeds, the return value is <c>true</c>. If the function fails, the return value is
                <c>false</c>.
            </returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.IsWindow(System.IntPtr)">
            <summary>
                A value indicating whether the Window is valid.
            </summary>
            <param name="hWnd">The Handle.</param>
            <returns>True if window is valid</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutGetNumDevs">
            <summary>
                Gets the number of devices.
            </summary>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutGetDevCaps(System.UInt32,Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps@,System.UInt32)">
            <summary>
                Gets the dev caps.
            </summary>
            <param name="deviceID">The DeviceId.</param>
            <param name="waveOutCaps">The WaveOutCaps.</param>
            <param name="cbwaveOutCaps">The Size.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutPrepareHeader(System.IntPtr,Sharpex2D.Framework.Audio.WaveOut.WaveHdr,System.Int32)">
            <summary>
                Prepares the header.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="lpWaveOutHdr">The WaveHeader.</param>
            <param name="uSize">The Size.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutUnprepareHeader(System.IntPtr,Sharpex2D.Framework.Audio.WaveOut.WaveHdr,System.Int32)">
            <summary>
                Unprepares the header.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="lpWaveOutHdr">The WaveHeader.</param>
            <param name="uSize">The Size.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutWrite(System.IntPtr,Sharpex2D.Framework.Audio.WaveOut.WaveHdr,System.Int32)">
            <summary>
                Writes the header.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="lpWaveOutHdr">The WaveHeader.</param>
            <param name="uSize">The Size.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutOpen(System.IntPtr@,System.UInt32,Sharpex2D.Framework.Audio.WaveOut.WaveFormat,Sharpex2D.NativeMethods.WaveDelegate,System.IntPtr,System.UInt32)">
            <summary>
                Opens a WaveOut.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="uDeviceID">The DeviceHandle.</param>
            <param name="lpFormat">The WaveFormat.</param>
            <param name="dwCallback">The Callback.</param>
            <param name="dwInstance">The Instance.</param>
            <param name="dwFlags">The Flags.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutReset(System.IntPtr)">
            <summary>
                Resets the WaveOut.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutClose(System.IntPtr)">
            <summary>
                Closes the WaveOut.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutPause(System.IntPtr)">
            <summary>
                Pauses the WaveOut.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutRestart(System.IntPtr)">
            <summary>
                Restarts the WaveOut.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutSetVolume(System.IntPtr,System.UInt32)">
            <summary>
                Sets the volume.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="dwVolume">The Volume.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutGetVolume(System.IntPtr,System.UInt32@)">
            <summary>
                Gets the Volume.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="dwVolume">The Volume.</param>
            <returns>Int.</returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutGetPitch(System.IntPtr,System.IntPtr)">
            <summary>
                Gets the Pitch.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="pdwPitch">The Pitch.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.NativeMethods.waveOutSetPitch(System.IntPtr,System.Int32)">
            <summary>
                Sets the Pitch.
            </summary>
            <param name="hWaveOut">The Handle.</param>
            <param name="dwPitch">The Pitch.</param>
            <returns></returns>
        </member>
        <member name="T:Sharpex2D.NativeMethods.WaveDelegate">
            <summary>
                WaveDelegate.
            </summary>
            <param name="handle">The Handle.</param>
            <param name="message">The Message.</param>
            <param name="user">The User.</param>
            <param name="waveHeader">The WaveHeader.</param>
            <param name="reserved">Reserved for driver.</param>
        </member>
        <member name="M:Sharpex2D.Platform.IsMonoRuntime">
            <summary>
                Gets the current CLR runtime.
            </summary>
            <returns>PlatformType.</returns>
        </member>
        <member name="M:Sharpex2D.ReflectionHelper.GetPropertyValue``1(System.String,System.Object)">
            <summary>
                Gets the property value with any access modifier.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="name">The Name.</param>
            <param name="obj">The Object being queried.</param>
            <returns>T Value.</returns>
        </member>
        <member name="M:Sharpex2D.ReflectionHelper.InvokeConstructor``1(System.Object[])">
            <summary>
                Invokes a contructor with any access modifier.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="parameters">The Parameters.</param>
            <returns>T.</returns>
        </member>
        <member name="F:Sharpex2D.TestState.Untested">
            <summary>
                The component is not tested.
            </summary>
        </member>
        <member name="F:Sharpex2D.TestState.InProgress">
            <summary>
                The component is currently under testing.
            </summary>
        </member>
        <member name="F:Sharpex2D.TestState.Tested">
            <summary>
                The component is tested.
            </summary>
        </member>
        <member name="M:Sharpex2D.TestStateAttribute.#ctor(Sharpex2D.TestState)">
            <summary>
                Initializes a new TestStateAttribute class.
            </summary>
            <param name="state">The TestState.</param>
        </member>
        <member name="M:Sharpex2D.EngineConfiguration.#ctor(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Audio.ISoundInitializer)">
            <summary>
                Initializes a new EngineConfiguration class.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="soundInitializer">The SoundInitializer.</param>
        </member>
        <member name="P:Sharpex2D.EngineConfiguration.Renderer">
            <summary>
                Gets the IRenderer.
            </summary>
        </member>
        <member name="P:Sharpex2D.EngineConfiguration.SoundInitializer">
            <summary>
                Gets the SoundInitializer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.IAudioDevice.Name">
            <summary>
                Gets the Name.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.#ctor(System.UInt32,Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps)">
            <summary>
                Initializes a new AudioDevice class.
            </summary>
            <param name="deviceId">The DeviceId.</param>
            <param name="waveOutCaps">The WaveOutCaps.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.IsSupported(Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported)">
            <summary>
                A value indicating whether the feature is supported.
            </summary>
            <param name="feature">The WaveCapsSupported.</param>
            <returns>True if supported.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.DeviceId">
            <summary>
                Gets the DeviceId.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.DriverVersion">
            <summary>
                Gets the DriverVersion.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.Channels">
            <summary>
                Gets the Channels.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.StereoSupport">
            <summary>
                A value indicating whether the device supports stereo.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.Manufacturer">
            <summary>
                Gets the Manufacturer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.ProductId">
            <summary>
                Gets the ProductId.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.Format">
            <summary>
                Gets the Format.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice.Name">
            <summary>
                Gets the Name.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_NOERROR">
            <summary>
                No error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_ERROR">
            <summary>
                Error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_BADDEVICEID">
            <summary>
                Device not available.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_NOTENABLED">
            <summary>
                WaveOut is disabled.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_ALLOCATED">
            <summary>
                Allocated.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_INVALHANDLE">
            <summary>
                The Handle is invalid.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_NODRIVER">
            <summary>
                No driver available.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_NOMEM">
            <summary>
                Out of memory.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_NOTSUPPORTED">
            <summary>
                Not supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_BADERRNUM">
            <summary>
                Bad error number.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_INVALFLAG">
            <summary>
                Invalid flag.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_INVALPARAM">
            <summary>
                Invalid parameter.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_HANDLEBUSY">
            <summary>
                WaveOut currently bussy.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_INVALIDALIAS">
            <summary>
                Invalid alias.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_BADDB">
            <summary>
                ???.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_KEYNOTFOUND">
            <summary>
                Key not found.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_READERROR">
            <summary>
                Read error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_WRITEERROR">
            <summary>
                Write error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_DELETEERROR">
            <summary>
                Delete error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_VALNOTFOUND">
            <summary>
                Value not found.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.MMSYSERR_NODRIVERCB">
            <summary>
                No driver cb.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.WAVERR_BADFORMAT">
            <summary>
                Bad format.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.WAVERR_STILLPLAYING">
            <summary>
                WaveOut still playing.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.MMResult.WAVERR_UNPREPARED">
            <summary>
                The header is not prepared.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_1M08">
            <summary>
                11. 025 kHz, Mono, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_1S08">
            <summary>
                11. 025 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_1M16">
            <summary>
                11. 025 kHz, Mono, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_1S16">
            <summary>
                11. 025 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_2M08">
            <summary>
                22. 05 kHz, Mono, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_2S08">
            <summary>
                22. 05 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_2M16">
            <summary>
                22. 05 kHz, Mono, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_2S16">
            <summary>
                22. 05 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_4M08">
            <summary>
                44. 1 kHz, Mono, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_4S08">
            <summary>
                44. 1 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_4M16">
            <summary>
                44. 1 kHz, Mono, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_4S16">
            <summary>
                44. 1 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_44M08">
            <summary>
                44. 1 kHz, Mono, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_44S08">
            <summary>
                44. 1 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_44M16">
            <summary>
                44. 1 kHz, Mono, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_44S16">
            <summary>
                44. 1 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_48M08">
            <summary>
                48 kHz, Mono, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_48S08">
            <summary>
                48 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_48M16">
            <summary>
                48 kHz, Mono, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_48S16">
            <summary>
                48 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_96M08">
            <summary>
                96 kHz, Mono, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_96S08">
            <summary>
                96 kHz, Stereo, 8-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_96M16">
            <summary>
                96 kHz, Mono, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsFormats.WAVE_FORMAT_96S16">
            <summary>
                96 kHz, Stereo, 16-bit
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported.WAVECAPS_PITCH">
            <summary>
                Pitch is supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported.WAVECAPS_PLAYBACKRATE">
            <summary>
                Playbackrate is supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported.WAVECAPS_VOLUME">
            <summary>
                Volume control supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported.WAVECAPS_LRVOLUME">
            <summary>
                Balancing is supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported.WAVECAPS_SYNC">
            <summary>
                The driver is synced.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveCapsSupported.WAVECAPS_SAMPLEACCURATE">
            <summary>
                Accurate position information supported.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.#ctor(Sharpex2D.Framework.Audio.WaveOut.WaveOutDevice,Sharpex2D.Framework.Audio.WaveOut.WaveStream,Sharpex2D.Framework.Audio.WaveOut.WaveOutBufferDescription)">
            <summary>
                Initializes a new WaveOut class.
            </summary>
            <param name="device">The AudioDevice.</param>
            <param name="waveStream">The WaveStream.</param>
            <param name="bufferDescription">The BufferDescription.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.EnumerateDevices">
            <summary>
                Enumerates the devices.
            </summary>
            <returns>Array of AudioDevice.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Finalize">
            <summary>
                Deconstructs the WaveOut.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.FillBuffers">
            <summary>
                Fills the buffers.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.FillBuffer(System.IntPtr,System.Int32)">
            <summary>
                Fills the buffer.
            </summary>
            <param name="data">The Data.</param>
            <param name="size">The Size.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.AllocateBuffers(System.Int32,System.Int32)">
            <summary>
                Allocates the buffers.
            </summary>
            <param name="bufferSize">The BufferSize.</param>
            <param name="bufferCount">The BufferCount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.FreeBuffers">
            <summary>
                Frees the buffers.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Advance">
            <summary>
                Advance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.WaitForAllBuffers">
            <summary>
                Waits for all buffers.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.SetVolume(System.Single)">
            <summary>
                Sets the Volume.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.SetBalance(System.Single,System.Single)">
            <summary>
                Sets the balance.
            </summary>
            <param name="left">The Left.</param>
            <param name="right">The Right.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.FloatToWaveOutVolume(System.Single,System.Single)">
            <summary>
                Converts a float into waveOut volume.
            </summary>
            <param name="left">Left.</param>
            <param name="right">Right.</param>
            <returns>UInt.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Pause">
            <summary>
                Pause.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Resume">
            <summary>
                Resume.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Stop">
            <summary>
                Stop.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.GetPosition">
            <summary>
                Gets the Position in ms.
            </summary>
            <returns>Int64.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.GetLength">
            <summary>
                Gets the Length in ms.
            </summary>
            <returns>Int64.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.Seek(System.Int64)">
            <summary>
                Seeks.
            </summary>
            <param name="position">The Position.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOut.IsPlaying">
            <summary>
                A value indicating whether the waveOut is playing.
            </summary>
            <returns>True if playing.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOut.LockObj">
            <summary>
                Gets the LockObj.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.#ctor(System.IntPtr,System.Int32,Sharpex2D.Framework.Audio.WaveOut.WaveOut)">
            <summary>
                Initializes a new WaveOutBuffer class.
            </summary>
            <param name="waveOutHandle">The WaveOutHandle.</param>
            <param name="size">The Size.</param>
            <param name="wavOut">The WaveOut.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.Finalize">
            <summary>
                Deconstructs the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.Play">
            <summary>
                Plays the buffer.
            </summary>
            <returns>True if playing.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.WaitFor">
            <summary>
                Waits for the buffer to be completed.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.OnCompleted">
            <summary>
                Called, if the buffer is completed.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.WaveOutProc(System.IntPtr,System.Int32,System.IntPtr,Sharpex2D.Framework.Audio.WaveOut.WaveHdr,System.IntPtr)">
            <summary>
                Processes the WaveOut messages.
            </summary>
            <param name="hdrvr">The Handle.</param>
            <param name="uMsg">The Message.</param>
            <param name="dwUser">The UserData.</param>
            <param name="wavhdr">The WaveHeader.</param>
            <param name="dwParam2">Reserved.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.NextBuffer">
            <summary>
                Gets or sets the NextBuffer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.Size">
            <summary>
                Gets the Size.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutBuffer.Data">
            <summary>
                Gets the Data.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutBufferDescription.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new WaveOutBufferDescription class.
            </summary>
            <param name="size">The Size.</param>
            <param name="count">The Count.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutBufferDescription.Size">
            <summary>
                Gets the Size.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutBufferDescription.Count">
            <summary>
                Gets the Count.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.wMid">
            <summary>
                The Manufacturer.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.wPid">
            <summary>
                The ProductId.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.vDriverVersion">
            <summary>
                The DriverVersion.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.szPname">
            <summary>
                The Devicename.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.dwFormats">
            <summary>
                Supported formats.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.wChannels">
            <summary>
                Amount of supported channels.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.wReserved1">
            <summary>
                Driver reserved.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveOutCaps.dwSupport">
            <summary>
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.ISoundInitializer.CreateProvider">
            <summary>
                Creates the ISoundProvider.
            </summary>
            <returns>ISoundProvider</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundInitializer.IsSupported">
            <summary>
                A value indicating whether the ISoundInitializer is supported.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutInitializer.CreateProvider">
            <summary>
                Creates the Provider.
            </summary>
            <returns>ISoundProvider.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutInitializer.IsSupported">
            <summary>
                A value indicating whether the WaveOutSoundProvider is supported.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Components.IComponent.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.ISoundProvider.Play(Sharpex2D.Framework.Audio.Sound,Sharpex2D.Framework.Audio.PlayMode)">
            <summary>
                Plays the sound.
            </summary>
            <param name="soundFile">The Soundfile.</param>
            <param name="playMode">The PlayMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.ISoundProvider.Resume">
            <summary>
                Resumes a sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.ISoundProvider.Pause">
            <summary>
                Pause a sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.ISoundProvider.Seek(System.Int64)">
            <summary>
                Seeks a sound to a specified position.
            </summary>
            <param name="position">The Position.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundProvider.Balance">
            <summary>
                Sets or gets the Balance.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundProvider.Volume">
            <summary>
                Sets or gets the Volume.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundProvider.Position">
            <summary>
                Sets or gets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundProvider.IsPlaying">
            <summary>
                A value indicating whether the SoundProvider is playing.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundProvider.Length">
            <summary>
                Gets the sound length.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.ISoundProvider.SoundInitializer">
            <summary>
                Gets the SoundInitializer.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Play(Sharpex2D.Framework.Audio.Sound,Sharpex2D.Framework.Audio.PlayMode)">
            <summary>
                Plays a sound.
            </summary>
            <param name="soundFile">The Sound.</param>
            <param name="playMode">The PlayMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Resume">
            <summary>
                Resumes a sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Pause">
            <summary>
                Pause a sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Seek(System.Int64)">
            <summary>
                Seeks a sound.
            </summary>
            <param name="position">The Position.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.#ctor(Sharpex2D.Framework.Audio.ISoundInitializer)">
            <summary>
                Initializes a new WaveOutSoundProvider class.
            </summary>
            <param name="soundInitializer">The SoundInitializer.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.CloseWaveOutSession">
            <summary>
                Closes the WaveOutSession.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Balance">
            <summary>
                Gets or sets the Balance.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Volume">
            <summary>
                Gets or sets the Volume.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Position">
            <summary>
                Gets or sets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.IsPlaying">
            <summary>
                A value indicating whether the SoundProvider is playing.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.Length">
            <summary>
                Gets the Length.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveOutSoundProvider.SoundInitializer">
            <summary>
                Gets the SoundInitializer.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Close">
            <summary>
                Closes the Stream.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Flush">
            <summary>
                Flushs the stream.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.SetLength(System.Int64)">
            <summary>
                Sets the Length.
            </summary>
            <param name="length">The Length.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
                Seeks the Stream
            </summary>
            <param name="position">The Position.</param>
            <param name="origin">The Origin.</param>
            <returns>Int64.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads the stream.
            </summary>
            <param name="buffer">The Buffer.</param>
            <param name="offset">The Offset.</param>
            <param name="count">The Count.</param>
            <returns>Int32.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Writes into the stream.
            </summary>
            <param name="buffer">The Buffer.</param>
            <param name="offset">The Offset.</param>
            <param name="count">The Count.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.#ctor(System.String)">
            <summary>
                Initializes a new WaveStream class.
            </summary>
            <param name="file">The File.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.#ctor(System.IO.Stream)">
            <summary>
                Initializes a new WaveStream class.
            </summary>
            <param name="stream">The BaseStream.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Finalize">
            <summary>
                Deconstructs the WaveStream class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.ReadChunk(System.IO.BinaryReader)">
            <summary>
                Reads a chunk.
            </summary>
            <param name="reader">The Reader.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveStream.ReadHeader">
            <summary>
                Reads the Header.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveStream.CanRead">
            <summary>
                A value indicating whether the stream can read.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveStream.CanSeek">
            <summary>
                A value indicating whether the stream can seek.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveStream.CanWrite">
            <summary>
                A value indicating whether the stream can write.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Length">
            <summary>
                Gets the Length.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.WaveOut.WaveStream.Position">
            <summary>
                Gets the Position.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.#ctor">
            <summary>
                Initializes a new BufferedCollection class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.Add(`0)">
            <summary>
                Adds a new Element to the collection.
            </summary>
            <param name="element">The Element.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.Remove(`0)">
            <summary>
                Removes an Element from the collection.
            </summary>
            <param name="element">The Element.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.Contains(`0)">
            <summary>
                Indicates whether the collection contains an element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.ToArray">
            <summary>
                Gets all elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.Get``1">
            <summary>
                Gets an specified Element of the collection.
            </summary>
            <typeparam name="TE">The Type.</typeparam>
            <returns>Element</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.BufferedCollection`1.Clear">
            <summary>
                Clears the collection.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Collections.BufferedCollection`1.Item(System.Int32)">
            <summary>
                Gets the Element by Index.
            </summary>
            <param name="index">The Index.</param>
            <returns>T</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.Collection`1.#ctor">
            <summary>
                Initializes a new Collection class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.Collection`1.Add(`0)">
            <summary>
                Adds a new Element to the collection.
            </summary>
            <param name="element">The Element.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.Collection`1.Remove(`0)">
            <summary>
                Removes an Element from the collection.
            </summary>
            <param name="element">The Element.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.Collection`1.Contains(`0)">
            <summary>
                Indicates whether the collection contains an element.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.Collection`1.ToArray">
            <summary>
                Gets all elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Collections.Collection`1.Get``1">
            <summary>
                Gets an specified Element of the collection.
            </summary>
            <typeparam name="TE">The Type.</typeparam>
            <returns>Element</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Collections.Collection`1.Item(System.Int32)">
            <summary>
                Gets the Element by Index.
            </summary>
            <param name="index">The Index.</param>
            <returns>T</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Delay.Execute(System.Single,System.Action)">
            <summary>
                Executes the action with the specified delay.
            </summary>
            <param name="delay">The Delay.</param>
            <param name="action">The Action.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Delay.Execute``1(System.Single,System.Func{``0})">
            <summary>
                Executes the function with the specified delay.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="delay">The Delay.</param>
            <param name="function">The Function.</param>
            <returns>T</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Extensions.SoundExtensions.GetStream(Sharpex2D.Framework.Audio.Sound)">
            <summary>
                Gets the Stream.
            </summary>
            <param name="sound">The Sound.</param>
            <returns>WaveStream.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Retry.Unlimited(System.TimeSpan,System.Action)">
            <summary>
                Executes an action with unlimited retries.
            </summary>
            <param name="timeout">The Timeout.</param>
            <param name="action">The Action.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Retry.Unlimited``1(System.TimeSpan,System.Func{``0})">
            <summary>
                Executes a function with unlimited retries.
            </summary>
            <param name="timeout">The Timeout.</param>
            <param name="func">The Function.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Retry.Limited(System.Int32,System.TimeSpan,System.Action)">
            <summary>
                >Executes an action with limited retries.
            </summary>
            <param name="iterations">The Retries.</param>
            <param name="timeout">The Timeout.</param>
            <param name="action">The Action.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Retry.Limited``1(System.Int32,System.TimeSpan,System.Func{``0})">
            <summary>
                >Executes a function with limited retries.
            </summary>
            <param name="iterations">The Retries.</param>
            <param name="timeout">The Timeout.</param>
            <param name="func">The Function.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Retry.EnableErrorReport">
            <summary>
                Sets or gets the EnableErrorReport.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Singleton`1.Instance">
            <summary>
                Gets the Instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.TaskWorker.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.TaskWorker.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.TaskWorker.#ctor">
            <summary>
                Initializes a new TaskComponent class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.TaskWorker.Start">
            <summary>
                Starts the
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.TaskWorker.Work">
            <summary>
                Starts the work.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Threads.TaskWorker.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Threads.TaskWorker.ProgressPercentage">
            <summary>
                Gets the ProgressPercentage.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentLoadException.#ctor">
            <summary>
                Initializes a new ContentLoadException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentLoadException.#ctor(System.String)">
            <summary>
                Initializes a new ContentLoadException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentLoadException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new ContentLoadException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new ContentLoadException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentAttribute.#ctor(System.String)">
            <summary>
                Initializes a new ContentAttribute class.
            </summary>
            <param name="displayName">The DisplayName.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.ContentAttribute.DisplayName">
            <summary>
                Gets the DisplayName.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.IContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.IContentProcessor.WriteData(System.Object,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.IContentProcessor.Type">
            <summary>
                Gets the Type.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.IContentProcessor.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.#ctor(System.Guid)">
            <summary>
                Initializes a new ContentProcessor class.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.Sharpex2D#Framework#Content#Pipeline#IContentProcessor#ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.Sharpex2D#Framework#Content#Pipeline#IContentProcessor#WriteData(System.Object,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.WriteData(`0,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.Type">
            <summary>
                Gets the Type.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.ContentProcessor`1.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorException.#ctor">
            <summary>
                Initializes a new ContentProcessorException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorException.#ctor(System.String)">
            <summary>
                Initializes a new ContentProcessorException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new ContentProcessorException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new ContentProcessorException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorSelector.#ctor">
            <summary>
                Initializes a new ContentProcessorSelector class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorSelector.Add(Sharpex2D.Framework.Content.Pipeline.IContentProcessor)">
            <summary>
                Adds a new ContentProcessor.
            </summary>
            <param name="contentProcessor"></param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.ContentProcessorSelector.Select``1">
            <summary>
                Selects a ContentProcessor.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>ContentProcessor T.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.CSharpScriptContentProcessor.#ctor">
            <summary>
                Initializes a new CSharpScriptContentProcessor class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.CSharpScriptContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>CSharpScript.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.CSharpScriptContentProcessor.WriteData(Sharpex2D.Framework.Scripting.CSharp.CSharpScript,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GamerContentProcessor.#ctor">
            <summary>
                Initializes a new GamerContentProcessor class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GamerContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>Gamer.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GamerContentProcessor.WriteData(Sharpex2D.Framework.Game.Services.Gamer,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDIPenContentProcessor.#ctor">
            <summary>
                Initializes a new GdiPenContentProcessor class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDIPenContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>GdiPen.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDIPenContentProcessor.WriteData(Sharpex2D.Framework.Rendering.GDI.GDIPen,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDITextureContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>GdiTexture.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDITextureContentProcessor.WriteData(Sharpex2D.Framework.Rendering.GDI.GDITexture,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.SoundContentProcessor.#ctor">
            <summary>
                Initializes a new SoundContentProcessor class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.SoundContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>Sound.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.SoundContentProcessor.WriteData(Sharpex2D.Framework.Audio.Sound,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDIFontContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>GdiFont.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.GDIFontContentProcessor.WriteData(Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.VBScriptContentProcessor.#ctor">
            <summary>
                Initializes a new CSharpScriptContentProcessor class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.VBScriptContentProcessor.ReadData(System.String)">
            <summary>
                Reads the data.
            </summary>
            <param name="filepath">The FilePath.</param>
            <returns>CSharpScript.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Processor.VBScriptContentProcessor.WriteData(Sharpex2D.Framework.Scripting.VB.VBScript,System.String)">
            <summary>
                Writes the data.
            </summary>
            <param name="data">The Data.</param>
            <param name="destinationpath">The DestinationPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.DebugConsole.Open">
            <summary>
                Open the DebugConsole.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.DebugConsole.Open(System.String)">
            <summary>
                Open the DebugConsole.
            </summary>
            <param name="debugName">The DebugName.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.DebugConsole.Close">
            <summary>
                Close the DebugConsole.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.ExceptionHandler.CurrentDomain_UnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
                Logs the unhandled exceptions.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.ExceptionHandler.Guid">
            <summary>
                Gets the guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.IAdapter.Write(System.String)">
            <summary>
                Logs a message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Console.ConsoleAdapter.#ctor(Sharpex2D.Framework.Debug.Logging.Adapters.Console.OutputMode)">
            <summary>
                Initializes a new ConsoleAdapter class.
            </summary>
            <param name="mode">The OutputMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Console.ConsoleAdapter.Write(System.String)">
            <summary>
                Logs a message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.Logging.Adapters.Console.ConsoleAdapter.OutputMode">
            <summary>
                Gets the OutputMode.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapterBase.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
                Initializes a new StreamingAdapterBase class.
            </summary>
            <param name="stream">The Stream.</param>
            <param name="encoding">The Encoding.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapterBase.Sharpex2D#Framework#Debug#Logging#Adapters#IAdapter#Write(System.String)">
            <summary>
                Logs a message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapterBase.Write(System.String,System.IO.StreamWriter)">
            <summary>
                Logs a message.
            </summary>
            <param name="message">The Message.</param>
            <param name="writer">The StreamWriter.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapterBase.Encoding">
            <summary>
                Gets the Encoding.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapter.#ctor(System.IO.Stream)">
            <summary>
                Initializes a new StreamingAdapter class.
            </summary>
            <param name="stream">The Stream.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
                Initializes a new StreamingAdapter class.
            </summary>
            <param name="stream">The Stream.</param>
            <param name="encoding">The Encoding.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.Streaming.StreamingAdapter.Write(System.String,System.IO.StreamWriter)">
            <summary>
                Logs a message.
            </summary>
            <param name="message">The Message.</param>
            <param name="writer">The StreamWriter.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Adapters.VisualStudio.VSAdapter.Write(System.String)">
            <summary>
                Logs a message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.#ctor(System.Type)">
            <summary>
                Initializes a new Logger class.
            </summary>
            <param name="type">The Type.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Format(System.String,Sharpex2D.Framework.Debug.Logging.LogLevel)">
            <summary>
                Formats the message.
            </summary>
            <param name="message">The Message.</param>
            <param name="level">The LogLevel.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Info(System.String)">
            <summary>
                Logs a new info message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Info(System.String,System.Object[])">
            <summary>
                Logs a new info message.
            </summary>
            <param name="stringFormat">The StringFormat.</param>
            <param name="arguments">The Arguments.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Warn(System.String)">
            <summary>
                Logs a new warning message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Warn(System.String,System.Object[])">
            <summary>
                Logs a new warning message.
            </summary>
            <param name="stringFormat">The StringFormat.</param>
            <param name="arguments">The Arguments.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Error(System.String)">
            <summary>
                Logs a new error message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Error(System.String,System.Object[])">
            <summary>
                Logs a new error message.
            </summary>
            <param name="stringFormat">The StringFormat.</param>
            <param name="arguments">The Arguments.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Critical(System.String)">
            <summary>
                Logs a new critical message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Critical(System.String,System.Object[])">
            <summary>
                Logs a new critical message.
            </summary>
            <param name="stringFormat">The StringFormat.</param>
            <param name="arguments">The Arguments.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Engine(System.String)">
            <summary>
                Logs a new engine message.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.Logger.Engine(System.String,System.Object[])">
            <summary>
                Logs a new engine message.
            </summary>
            <param name="stringFormat">The StringFormat.</param>
            <param name="arguments">The Arguments.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.Logging.Logger.Type">
            <summary>
                Gets the Type.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.LogLevel.Info">
            <summary>
                Indicates an information.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.LogLevel.Warning">
            <summary>
                Indicates a warning.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.LogLevel.Error">
            <summary>
                Indicates an error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.LogLevel.Critical">
            <summary>
                Indicates a critical error.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.LogLevel.Engine">
            <summary>
                Indicates a engine message.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.LogManager.#cctor">
            <summary>
                Initializes a new LogManager class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.LogManager.GetLogger(System.Type)">
            <summary>
                Gets the logger.
            </summary>
            <param name="type">The Type.</param>
            <returns>Logger.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.LogManager.GetClassLogger">
            <summary>
                Gets the class logger.
            </summary>
            <returns>The Logger.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Logging.LogManager.Trace(System.String,Sharpex2D.Framework.Debug.Logging.LogLevel)">
            <summary>
                Traces the message.
            </summary>
            <param name="message">The Message.</param>
            <param name="level">The LogLevel.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.Logging.LogManager.MinimumLogLevel">
            <summary>
                Gets or sets the MinimumLogLevel.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.Logging.LogManager.Adapter">
            <summary>
                Gets or sets the Adapter.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.Adapters.Console.OutputMode.Standard">
            <summary>
                StandardOut stream.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Debug.Logging.Adapters.Console.OutputMode.Error">
            <summary>
                StandardError stream.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.ProcessStatus.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.ProcessStatus.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.ProcessStatus.#ctor">
            <summary>
                Initializes a new ProcessStatus class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.ProcessStatus.RefreshValues">
            <summary>
                Refreshes all values.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.ProcessStatus.Cancel">
            <summary>
                Cancels the service.
            </summary>
            <remarks>
                If cancel is called, there is no possibility to restart this service.
                You need to initialize a new instance of ProcessStatus.
            </remarks>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.ProcessStatus.Guid">
            <summary>
                Gets the guid.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.ProcessStatus.MemoryUsage">
            <summary>
                Gets the memory usage in bytes.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.ProcessStatus.TotalThreads">
            <summary>
                Gets the amount of threads.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Debug.ProcessStatus.CpuUsage">
            <summary>
                Gets the cpu usage.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Extensions.BinaryReaderExtension.ReadAllBytes(System.IO.BinaryReader)">
            <summary>
                Reads all Bytes (Alloc:1024).
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Extensions.UIBoundsExtension.ToRectangle(Sharpex2D.Framework.UI.UIBounds)">
            <summary>
                Returns a new Rectangle.
            </summary>
            <param name="bounds">The UIBounds.</param>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Extensions.VectorExtension.ToPoints(Sharpex2D.Framework.Math.Vector2[])">
            <summary>
                Converts the Vector2 Array into a Point Array.
            </summary>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.IAlgorithm.TrySolve(Sharpex2D.Framework.Common.Pathfinding.Grid,Sharpex2D.Framework.Common.Pathfinding.GridField,Sharpex2D.Framework.Common.Pathfinding.GridField,System.Collections.Generic.Stack{Sharpex2D.Framework.Common.Pathfinding.GridField}@)">
            <summary>
                Trys to solve a path.
            </summary>
            <param name="startField">The Startfield.</param>
            <param name="targetField">The Targetfield.</param>
            <param name="path">Out of Positions.</param>
            <param name="grid">The Grid.</param>
            <returns>True on success</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.AStar.AStarAlgorithm.TrySolve(Sharpex2D.Framework.Common.Pathfinding.Grid,Sharpex2D.Framework.Common.Pathfinding.GridField,Sharpex2D.Framework.Common.Pathfinding.GridField,System.Collections.Generic.Stack{Sharpex2D.Framework.Common.Pathfinding.GridField}@)">
            <summary>
                Trys to solve a path.
            </summary>
            <param name="startField">The Startfield.</param>
            <param name="targetField">The Targetfield.</param>
            <param name="path">Out of Positions.</param>
            <param name="grid">The Grid.</param>
            <returns>True on success</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.Grid.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new Grid class.
            </summary>
            <param name="width">The Width.</param>
            <param name="height">The Height.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.Grid.GetNeighbors(System.Int32,System.Int32)">
            <summary>
                Returns all Neighbors of a field.
            </summary>
            <param name="x">The X-Coord of the field.</param>
            <param name="y">The Y-Coord of the field.</param>
            <returns>Neighbor Array</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.Grid.GetGridField(System.Int32,System.Int32)">
            <summary>
                Returns a GridField on the specific position.
            </summary>
            <param name="x">The X-Coord.</param>
            <param name="y">The Y-Coord.</param>
            <returns>GridField</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.Grid.GetDistance(Sharpex2D.Framework.Common.Pathfinding.GridField,Sharpex2D.Framework.Common.Pathfinding.GridField)">
            <summary>
                Gets the distance between two GridFields.
            </summary>
            <param name="first">The first GridField.</param>
            <param name="second">The second GridField.</param>
            <returns>Int32</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.GridField.#ctor">
            <summary>
                Initializes a new GridField class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.GridField.CompareTo(Sharpex2D.Framework.Common.Pathfinding.GridField)">
            <summary>
                Compares the fieldvalue to other.
            </summary>
            <param name="other">The other GridField.</param>
            <returns>Int32</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.GridField.DistanceToNeighbor(Sharpex2D.Framework.Common.Pathfinding.GridField)">
            <summary>
                Gets the distance to a neighbor.
            </summary>
            <param name="neighbor">The Neigbor.</param>
            <returns>Int32</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Pathfinding.GridField.Neighbors">
            <summary>
                Gets the Neigbors of the GridField.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Pathfinding.GridField.Position">
            <summary>
                Gets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Pathfinding.GridField.IsWalkable">
            <summary>
                A value indicating whether the field is walkable.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.Neighbor.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new Neighbor class.
            </summary>
            <param name="x">The X-Coord.</param>
            <param name="y">The Y-Coord.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Pathfinding.Neighbor.X">
            <summary>
                Gets the X-Coord.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Pathfinding.Neighbor.Y">
            <summary>
                Gets the Y-Coord.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Pathfinding.PathFinder.TrySolve(Sharpex2D.Framework.Common.Pathfinding.Grid,Sharpex2D.Framework.Common.Pathfinding.GridField,Sharpex2D.Framework.Common.Pathfinding.GridField,Sharpex2D.Framework.Common.Pathfinding.IAlgorithm,System.Collections.Generic.Stack{Sharpex2D.Framework.Common.Pathfinding.GridField}@)">
            <summary>
                Trys to solve a path.
            </summary>
            <param name="startField">The Startfield.</param>
            <param name="targetField">The Targetfield.</param>
            <param name="path">Out of Positions.</param>
            <param name="grid">The Grid.</param>
            <param name="algorithm">The Search-Algorithm.</param>
            <returns>True on success</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.IThreadInvoker.Invoke(System.Action)">
            <summary>
                Invokes an action in a special thread.
            </summary>
            <param name="action">The Action.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Profiler.#cctor">
            <summary>
                Initializes a  new Profiler class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Debug.Profiler.Profile(System.Guid,System.Action)">
            <summary>
                Profiles an action.
            </summary>
            <param name="guid">The Guid.</param>
            <param name="action">The Action.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.#ctor">
            <summary>
                Initializes a new GameRandom.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.Next">
            <summary>
                Returns Int32 between Int32 min - and max value.
            </summary>
            <returns>Int</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.Next(System.Int32)">
            <summary>
                Returns Int32 between 0 and max.
            </summary>
            <param name="max">The Maximum.</param>
            <returns>Int</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.Next(System.Int32,System.Int32)">
            <summary>
                Returns Int32 between min and max.
            </summary>
            <param name="min">The Minimum.</param>
            <param name="max">The Maximum.</param>
            <returns>Int</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.NextFloat">
            <summary>
                Returns a float between 0 and 1.
            </summary>
            <returns>Float</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.NextDouble">
            <summary>
                Returns a double between 0 and 1.
            </summary>
            <returns>Double</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.NextBoolean">
            <summary>
                Returns true or false.
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Randomization.GameRandom.NextBoolean(System.Double)">
            <summary>
                Returns true or false based on the probability.
            </summary>
            <param name="probability">The Probability.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.ThreadInvoker.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.ThreadInvoker.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.ThreadInvoker.#ctor">
            <summary>
                Initializes a new ThreadInvoker class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.ThreadInvoker.Invoke(System.Action)">
            <summary>
                Invokes an action in a special thread.
            </summary>
            <param name="action">The Action.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Components.IConstructable.Construct">
            <summary>
                Constructs the Component
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.GetEnumerator">
            <summary>
                Gets the Enumerator.
            </summary>
            <returns>IEnumerator.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Gets the Enumerator.
            </summary>
            <returns>IEnumerator.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.Construct">
            <summary>
                Initializes all Components.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.AddComponent(Sharpex2D.Framework.Components.IComponent)">
            <summary>
                Adds a new Component to the enumeration.
            </summary>
            <param name="component">The Component.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.RemoveComponent(Sharpex2D.Framework.Components.IComponent)">
            <summary>
                Removes a Component from the enumeration.
            </summary>
            <param name="component">The Component.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.Get``1">
            <summary>
                Returns a specific component if exists.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>Component</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Components.ComponentManager.GetByGuid(System.Guid)">
            <summary>
                Gets the Component by Guid.
            </summary>
            <param name="guid">The Guid.</param>
            <returns>IComponent</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Components.ComponentManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Components.ComponentManager.Components">
            <summary>
                Access to the Components enumeration.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentManager.#ctor">
            <summary>
                Initializes a new ContentManager.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentManager.Load``1(System.String)">
            <summary>
                Loads an asset.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="asset">The Asset.</param>
            <returns>T.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Content.ContentManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.ContentManager.RootPath">
            <summary>
                Sets or gets the base ContentPath.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.ContentManager.ContentVerifier">
            <summary>
                Gets the ContentVerifier.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.ContentManager.ContentProcessor">
            <summary>
                Gets the ContentProcessor.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.IPrimitiveSerializer.Write(System.IO.BinaryWriter,System.Object)">
            <summary>
                Starts writing contentdata.
            </summary>
            <param name="writer">The BinaryWriter</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.IPrimitiveSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Starts reading contentdata.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns>Object</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.Serializer.IPrimitiveSerializer.ContentType">
            <summary>
                Gets the ContentType.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.Serializer.IPrimitiveSerializer.Content">
            <summary>
                The ContentManager.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.PrimitiveSerializer`1.Sharpex2D#Framework#Content#Pipeline#Serializer#IPrimitiveSerializer#Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns>Object</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.PrimitiveSerializer`1.Sharpex2D#Framework#Content#Pipeline#Serializer#IPrimitiveSerializer#Write(System.IO.BinaryWriter,System.Object)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.PrimitiveSerializer`1.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns>T</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.PrimitiveSerializer`1.Write(System.IO.BinaryWriter,`0)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.Serializer.PrimitiveSerializer`1.ContentType">
            <summary>
                Gets the ContentType.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Content.Pipeline.Serializer.PrimitiveSerializer`1.Content">
            <summary>
                The ContentManager.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentVerifier.#ctor">
            <summary>
                Initializes a new ContentVerifier class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentVerifier.Verify(System.String,System.String)">
            <summary>
                Checks whether the content file is modified.
            </summary>
            <param name="contentPath">The ContentPath.</param>
            <param name="expectedSha256">The ExpectedSha256Hash.</param>
            <returns>True if the file was NOT modified.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentVerifier.Verify(System.IO.Stream,System.String)">
            <summary>
                Checks whether the content file is modified.
            </summary>
            <param name="fileStream">The FileStream.</param>
            <param name="expectedSha256">The ExpectedSha256Hash.</param>
            <returns>True if the file was NOT modified.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentVerifier.Sha256(System.String)">
            <summary>
                Gets the Sha256-Hash of a file.
            </summary>
            <param name="file">The File.</param>
            <returns>String</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.ContentVerifier.Sha256(System.IO.Stream)">
            <summary>
                Gets the Sha256-Hash of a file.
            </summary>
            <param name="fileStream">The FileStream.</param>
            <returns>String</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.BooleanSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.BooleanSerializer.Write(System.IO.BinaryWriter,System.Boolean)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ByteArraySerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ByteArraySerializer.Write(System.IO.BinaryWriter,System.Byte[])">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ByteSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ByteSerializer.Write(System.IO.BinaryWriter,System.Byte)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.CharSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.CharSerializer.Write(System.IO.BinaryWriter,System.Char)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ColorSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ColorSerializer.Write(System.IO.BinaryWriter,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.DoubleSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.DoubleSerializer.Write(System.IO.BinaryWriter,System.Double)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.FloatSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.FloatSerializer.Write(System.IO.BinaryWriter,System.Single)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.IntegerSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.IntegerSerializer.Write(System.IO.BinaryWriter,System.Int32)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.LongSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.LongSerializer.Write(System.IO.BinaryWriter,System.Int64)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ShortSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.ShortSerializer.Write(System.IO.BinaryWriter,System.Int16)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.StringSerializer.Read(System.IO.BinaryReader)">
            <summary>
                Reads a value from the given Reader.
            </summary>
            <param name="reader">The BinaryReader.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Content.Pipeline.Serializer.Primitive.StringSerializer.Write(System.IO.BinaryWriter,System.String)">
            <summary>
                Writes a specified value.
            </summary>
            <param name="writer">The BinaryWriter.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.#ctor">
            <summary>
                Initializes a new Entity class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.OnPositionChanged(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Called, if the Position changed.
            </summary>
            <param name="delta">The Delta.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.EnableContainerUpdates">
            <summary>
                Enables Container updates.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.DisableContainerUpdates">
            <summary>
                Disbale Container updates.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.Destroy">
            <summary>
                Destroys the Entity.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Entity.Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Render.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Entity.Position">
            <summary>
                Sets or gets the Position of the Entity.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Entity.Id">
            <summary>
                Sets or gets the Id of the Entity.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Entity.EntityContainer">
            <summary>
                Gets the EntityContainer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Entity.IsDirty">
            <summary>
                A value indicating whether the Entity is dirty.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Entity.IsDestroyed">
            <summary>
                A value indicating whether the Entity is destroyed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Entity.RaiseEvents">
            <summary>
                A value indicating whether the Entity can raise events.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityContainer.#ctor">
            <summary>
                Initializes a new EntityContainer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityContainer.Add(Sharpex2D.Framework.Entities.Entity)">
            <summary>
                Adds a new Entity to the Container.
            </summary>
            <param name="entity">The Entity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityContainer.Remove(Sharpex2D.Framework.Entities.Entity)">
            <summary>
                Removes a Entity from the Container.
            </summary>
            <param name="entity">The Entity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityContainer.GetEntities">
            <summary>
                Gets all Entities.
            </summary>
            <returns>Entity Array</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityContainer.Get``1">
            <summary>
                Gets a special Entity.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>Entity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.#ctor">
            <summary>
                Initializes a new EntityManager class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.Add(Sharpex2D.Framework.Entities.Entity)">
            <summary>
                Adds a new Entity to the Container.
            </summary>
            <param name="entity">The Entity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.Remove(Sharpex2D.Framework.Entities.Entity)">
            <summary>
                Removes a Entity from the Container.
            </summary>
            <param name="entity">The Entity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.GetEntities">
            <summary>
                Gets all Entities.
            </summary>
            <returns>Entity Array</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.Get``1">
            <summary>
                Gets a special Entity.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>Entity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.GetEntityById(System.Int32)">
            <summary>
                Gets a special Entity.
            </summary>
            <param name="id">The Id.</param>
            <returns>Entity.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.Clear">
            <summary>
                Clears all Entities.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.EntityEnvironment.Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Render.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Events.EntityDestroyedEvent.#ctor(Sharpex2D.Framework.Entities.Entity)">
            <summary>
                Initializes a new EntityDestroyedEvent class.
            </summary>
            <param name="entity">The Entity.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Events.EntityDestroyedEvent.DestroyedEntity">
            <summary>
                Gets the destroyed entity.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Entities.Events.EntityPositionChangedEvent.#ctor(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Initializes a new PositionChangedEvent class.
            </summary>
            <param name="delta">The Delta.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Entities.Events.EntityPositionChangedEvent.Delta">
            <summary>
                Gets the Delta.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventManager.Subscribe(System.IObserver{Sharpex2D.Framework.Events.IEvent})">
            <summary>
                Subscribes to a special event.
            </summary>
            <param name="observer">The Observer.</param>
            <returns>Unsubscriber</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventManager.GetObservers``1">
            <summary>
                Gets the observer of a special event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventManager.Publish``1(``0)">
            <summary>
                Publishs a Event to all observers.
            </summary>
            <typeparam name="TEvent">The Event.</typeparam>
            <param name="e">The Event.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Events.EventManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventManager.Unsubscriber.#ctor(System.Collections.Generic.LinkedListNode{System.IObserver{Sharpex2D.Framework.Events.IEvent}})">
            <summary>
                Initializes a new Unsubscriber instance.
            </summary>
            <param name="observer">The Observer.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventManager.Unsubscriber.Dispose">
            <summary>
                Removes the Observer.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventObserver`1.#ctor(System.Action{`0})">
            <summary>
                Creates a new EventObserver.
            </summary>
            <param name="action">The Delegate.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventObserver`1.OnNext(Sharpex2D.Framework.Events.IEvent)">
            <summary>
                Tracks the event to it's delegate.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventObserver`1.OnError(System.Exception)">
            <summary>
                On Error.
            </summary>
            <param name="error">The Error.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Events.EventObserver`1.OnCompleted">
            <summary>
                On Completed.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.GameComponentManager.#ctor">
            <summary>
                Initializes a new GameComponentCollection class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.GameComponentManager.GetEnumerator">
            <summary>
                Gets the Enumerator.
            </summary>
            <returns>IEnumerator of IGameComponent.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.GameComponentManager.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Gets the Enumerator.
            </summary>
            <returns>IEnumerator of IGameComponent.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.GameComponentManager.Add(Sharpex2D.Framework.Game.IGameComponent)">
            <summary>
                Adds a new IGameComponent.
            </summary>
            <param name="gameComponent">The IGameComponent.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.GameComponentManager.Remove(Sharpex2D.Framework.Game.IGameComponent)">
            <summary>
                Removes a IGameComponent.
            </summary>
            <param name="gameComponent">The IGameComponent.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.GameComponentManager.Components">
            <summary>
                Gets the Components.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.GameComponentManager.GameComponentComparer.Compare(Sharpex2D.Framework.Game.IGameComponent,Sharpex2D.Framework.Game.IGameComponent)">
            <summary>
                Compares two IGameComponents.
            </summary>
            <param name="x">The first IGameComponent.</param>
            <param name="y">The second IGameComponent.</param>
            <returns>Int32.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Game.GameTime.ElapsedGameTime">
            <summary>
                Gets the ElapsedGameTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.GameTime.IsRunningSlowly">
            <summary>
                A value indicating whether the updateloop hangs behind. If your game encounter this, do something to catch up e.G.
                disable physics.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.GameTime.TotalGameTime">
            <summary>
                Gets the TotalGameTime.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.IDrawable.Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Renders the object.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.IUpdateable.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.#ctor">
            <summary>
                Initializes a new Game class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.Sharpex2D#Framework#Game#IUpdateable#Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.Sharpex2D#Framework#Game#IDrawable#Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Render.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.Sharpex2D#Framework#Components#IConstructable#Construct">
            <summary>
                Constructs the component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnUpdate(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnRendering(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Render.
            </summary>
            <param name="renderer">The GraphicRenderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnInitialize(Sharpex2D.Framework.Game.Services.LaunchParameters)">
            <summary>
                Processes the Game initialization.
            </summary>
            <param name="launchParameters">The LaunchParameters.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnLoadContent">
            <summary>
                Processes the Game load.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnUnload">
            <summary>
                Processes the Game unload.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnActivation">
            <summary>
                Processes if the surface is activated.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.OnDeactivation">
            <summary>
                Processes if the surface is deactivated.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.Exit">
            <summary>
                Exits the game.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Game.Restart(Sharpex2D.Framework.Game.Services.LaunchParameters)">
            <summary>
                Restarts the Game with the specified LaunchParameters.
            </summary>
            <param name="launchParameters">The LaunchParameters.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.GameComponentManager">
            <summary>
                Gets the GameComponentManager.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.Input">
            <summary>
                The current InputManager.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.SoundManager">
            <summary>
                The Current SoundPlayer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.Content">
            <summary>
                The Current ContentManager.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.SceneManager">
            <summary>
                The Current SceneManager.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.GameServices">
            <summary>
                The Current GameServices.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.TargetFrameTime">
            <summary>
                Sets or gets the TargetFrameTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.TargetUpdateTime">
            <summary>
                Sets or gets the TargetUpdateTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Game.IsActive">
            <summary>
                A value indicating whether the surface is active.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.IGameComponent.Order">
            <summary>
                Gets the Order.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameter.#ctor(System.String,System.String)">
            <summary>
                Initializes a new LaunchParameter class.
            </summary>
            <param name="key">The Key.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.LaunchParameter.Key">
            <summary>
                Gets the Key.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.LaunchParameter.Value">
            <summary>
                Gets the Value.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameters.#ctor">
            <summary>
                Initializes a new LaunchParameters class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameters.#ctor(System.Collections.Generic.IEnumerable{Sharpex2D.Framework.Game.Services.LaunchParameter})">
            <summary>
                Initializes a new LaunchParameters class.
            </summary>
            <param name="parameters">The Parameters.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameters.ParseCommandLineParameters(System.Collections.Generic.IList{System.String})">
            <summary>
                Parses the command line parameters.
            </summary>
            <param name="value">The Parameters.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameters.KeyAvailable(System.String)">
            <summary>
                Indicating whether the key is available.
            </summary>
            <param name="key">The Key.</param>
            <returns>True if the key is available.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameters.ToString">
            <summary>
                Converts the LaunchParameters into string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.LaunchParameters.CreateParameters(Sharpex2D.Framework.Game.Services.LaunchParameter[])">
            <summary>
                Creates a new LaunchParameters object.
            </summary>
            <param name="parameters">The Parameters.</param>
            <returns>LaunchParameters.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.LaunchParameters.Item(System.String)">
            <summary>
                Returns a launch parameter specified by the key.
            </summary>
            <param name="key">The Key.</param>
            <returns>String.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.Achievement.#ctor(System.Guid)">
            <summary>
                Initializes a new Achievement class.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Achievements.Achievement.Title">
            <summary>
                Sets or gets the Title.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Achievements.Achievement.Description">
            <summary>
                Sets or gets the Description.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Achievements.Achievement.IsSolved">
            <summary>
                A value indicating whether the achievement is solved.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Achievements.Achievement.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.#ctor">
            <summary>
                Initializes a new AchievementProvider class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.Add(Sharpex2D.Framework.Game.Services.Achievements.Achievement)">
            <summary>
                Adds a new Achievement.
            </summary>
            <param name="achievement">The Achievement.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.Remove(Sharpex2D.Framework.Game.Services.Achievements.Achievement)">
            <summary>
                Removes a Achievement.
            </summary>
            <param name="achievement">The Achievement.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.Remove(System.Guid)">
            <summary>
                Removes a Achievement.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.Get(System.Guid)">
            <summary>
                Gets a Achievement.
            </summary>
            <param name="guid">The Guid.</param>
            <returns>Achievement</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.GetSolved">
            <summary>
                Gets the solved Achievements.
            </summary>
            <returns>Array of Achievement</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.GetUnSolved">
            <summary>
                Gets the unsolved Achievements.
            </summary>
            <returns>Array of Achievement</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.GetAll">
            <summary>
                Gets all Achievements.
            </summary>
            <returns>Array of Achievement</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Achievements.AchievementProvider.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Gamer.#ctor">
            <summary>
                Initializes a new Gamer class.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Gamer.DisplayName">
            <summary>
                Gets or sets the DisplayName of the gamer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Services.Gamer.Guid">
            <summary>
                Gets or sets the Guid-Identifer of the gamer.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.GameServiceContainer.#ctor">
            <summary>
                Initializes a new GameServiceContainer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.GameServiceContainer.Add(Sharpex2D.Framework.Game.Services.IGameService)">
            <summary>
                Adds a new GameService.
            </summary>
            <param name="service">The GameService.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.GameServiceContainer.Remove(Sharpex2D.Framework.Game.Services.IGameService)">
            <summary>
                Removes a GameService.
            </summary>
            <param name="service">The GameService.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.GameServiceContainer.GetService``1">
            <summary>
                Gets the Service.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>T.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.#ctor">
            <summary>
                Initializes a new GameSettings class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.AddSetting(System.String,System.Object)">
            <summary>
                Adds a new Setting to the GameSettings class.
            </summary>
            <param name="name">The Name.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.GetSetting(System.String)">
            <summary>
                Returns a SettingValue.
            </summary>
            <param name="name">The Name.</param>
            <returns>Object</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.GetSetting``1(System.String)">
            <summary>
                Returns a SettingValue.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="name">The Name.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.SetSeting(System.String,System.Object)">
            <summary>
                Sets a new value of a setting.
            </summary>
            <param name="name">The Name.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.LoadFrom(System.String)">
            <summary>
                Loads the GameSettings from a specific path.
            </summary>
            <param name="path">The Path.</param>
            <returns>GameSettings</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Settings.GameSettings.Save(System.String)">
            <summary>
                Saves the setting to a specific path.
            </summary>
            <param name="path">The Path.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.GameUpdateRequiredException.#ctor">
            <summary>
                Initializes a new GameUpdateRequiredException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.GameUpdateRequiredException.#ctor(System.String)">
            <summary>
                Initializes a new GameUpdateRequiredException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.GameUpdateRequiredException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new GameUpdateRequiredException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.GameUpdateRequiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new GameUpdateRequiredException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.NetworkNotAvailableException.#ctor">
            <summary>
                Initializes a new NetworkNotAvailableException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.NetworkNotAvailableException.#ctor(System.String)">
            <summary>
                Initializes a new NetworkNotAvailableException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.NetworkNotAvailableException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new NetworkNotAvailableException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.NetworkNotAvailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new NetworkNotAvailableException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Services.Availability.AvailabilityProvider.CheckNetworkConnection">
            <summary>
                Checks if the Network is available. Throws an NetworkNotAvailableException if not.
            </summary>
            <returns>True if the network is available</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Weather.IWeather.CurrentWeather">
            <summary>
                Gets the current weather.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Weather.WeatherProvider.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Weather.WeatherProvider.Construct">
            <summary>
                Constructs the Component
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Weather.WeatherProvider.#ctor(Sharpex2D.Framework.Game.Simulation.Time.GameTime,Sharpex2D.Framework.Game.Simulation.Weather.WeatherType)">
            <summary>
                Initializes a new WeatherProvider class.
            </summary>
            <param name="gameTime">The GameTime.</param>
            <param name="initialWeather">The initial Weather.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Weather.WeatherProvider.UpdateWeather">
            <summary>
                Updates the weather.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Weather.WeatherProvider.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Weather.WeatherProvider.CurrentWeather">
            <summary>
                Gets the current weather.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.Events.TargetFrameTimeChangedEvent.#ctor">
            <summary>
                Initializes a new TargetFrameTimeChangedEvent class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.Events.TargetFrameTimeChangedEvent.#ctor(System.Single,System.Single)">
            <summary>
                Initializes a new TargetFrameTimeChangedEvent class.
            </summary>
            <param name="fps">The FramesPerSecond.</param>
            <param name="targetFrameTime">The TargetFrameTime.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.Events.TargetFrameTimeChangedEvent.FramesPerSecond">
            <summary>
                Gets the changed fps amount.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.Events.TargetFrameTimeChangedEvent.TargetFrameTime">
            <summary>
                Gets the TargetFrameTime.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.IGameLoop.Start">
            <summary>
                Starts the GameLoop.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.IGameLoop.Stop">
            <summary>
                Stops the GameLoop.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.IGameLoop.Subscribe(Sharpex2D.Framework.Game.IDrawable)">
            <summary>
                Subscribes a IDrawable to the game loop.
            </summary>
            <param name="drawable">The IDrawable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.IGameLoop.Unsubscribe(Sharpex2D.Framework.Game.IDrawable)">
            <summary>
                Unsubscribes a IDrawable from the game loop.
            </summary>
            <param name="drawable">The IDrawable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.IGameLoop.Subscribe(Sharpex2D.Framework.Game.IUpdateable)">
            <summary>
                Subscribes a IUpdateable to the game loop.
            </summary>
            <param name="updateable">The IDrawable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.IGameLoop.Unsubscribe(Sharpex2D.Framework.Game.IUpdateable)">
            <summary>
                Unsubscribes a IUpdateable from the game loop.
            </summary>
            <param name="updateable">The IUpdateable.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.IGameLoop.TargetFrameTime">
            <summary>
                Gets or sets the TargetFrameTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.IGameLoop.TargetUpdateTime">
            <summary>
                Gets or sets the TargetUpdateTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.IGameLoop.IsRunning">
            <summary>
                Indicates whether the GameLoop is running.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.IGameLoop.TargetFramesPerSecond">
            <summary>
                Gets the Target FPS.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.IGameLoop.Idle">
            <summary>
                A value indicating whether the game loop should idle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.IGameLoop.IdleDuration">
            <summary>
                Gets or sets the IdleDuration.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Start">
            <summary>
                Starts the GameLoop.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Stop">
            <summary>
                Stops the GameLoop.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Subscribe(Sharpex2D.Framework.Game.IDrawable)">
            <summary>
                Subscribes a IDrawable to the game loop.
            </summary>
            <param name="drawable">The IDrawable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Unsubscribe(Sharpex2D.Framework.Game.IDrawable)">
            <summary>
                Unsubscribes a IDrawable from the game loop.
            </summary>
            <param name="drawable">The IDrawable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Subscribe(Sharpex2D.Framework.Game.IUpdateable)">
            <summary>
                Subscribes a IUpdateable to the game loop.
            </summary>
            <param name="updateable">The IDrawable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Unsubscribe(Sharpex2D.Framework.Game.IUpdateable)">
            <summary>
                Unsubscribes a IUpdateable from the game loop.
            </summary>
            <param name="updateable">The IUpdateable.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.#ctor">
            <summary>
                Initializes a new GameLoop class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.OnFpsChanged">
            <summary>
                Called if the FPS changed.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.TotalGameTime">
            <summary>
                Updates the total game time.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.InternalUpdateLoop">
            <summary>
                Handles the update loop.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameLoop.InternalRenderingLoop">
            <summary>
                Handles the rendering loop.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.RenderMode">
            <summary>
                Sets or gets the RenderMode.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.TargetFrameTime">
            <summary>
                Gets the TargetFrameTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.TargetUpdateTime">
            <summary>
                Gets the TargetUpdateTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.IsRunning">
            <summary>
                Indicates whether the GameLoop is running.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.Idle">
            <summary>
                A value indicating whether the game loop should idle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.IdleDuration">
            <summary>
                Gets or sets the IdleDuration.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameLoop.TargetFramesPerSecond">
            <summary>
                Gets or sets the Target FPS.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Time.GameTime.Construct">
            <summary>
                Constructs the Component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Time.GameTime.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Simulation.Time.GameTime.#ctor">
            <summary>
                Creates a new GameTime.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Time.GameTime.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Time.GameTime.DayLength">
            <summary>
                Gets or sets the length of the simulated game day.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Time.GameTime.DayTime">
            <summary>
                Gets the current time of the game day.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Simulation.Time.GameTime.Mode">
            <summary>
                Indicates whether the time should be simulated or real.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.ITimeable.Interval">
            <summary>
                Sets or gets the Interval.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Game tick.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.Construct">
            <summary>
                Constructs the Component
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.#ctor">
            <summary>
                Initializes a new GameTimer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.#ctor(Sharpex2D.Framework.Game.Timing.UpdateMode)">
            <summary>
                Initializes a new GameTimer class.
            </summary>
            <param name="updateMode">The UpdateMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.#ctor(System.Single,Sharpex2D.Framework.Game.Timing.UpdateMode)">
            <summary>
                Initializes a new GameTimer class.
            </summary>
            <param name="interval">The Interval.</param>
            <param name="updateMode">The UpdateMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.Update(System.Single)">
            <summary>
                Updates the GameTimer.
            </summary>
            <param name="elapsed">The Elapsed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.GameTimer.Start">
            <summary>
                Starts the GameTimer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameTimer.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameTimer.Interval">
            <summary>
                Sets or gets the Intervall.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameTimer.IsRunning">
            <summary>
                A value indicating whether the GameTimer is running.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameTimer.UpdateMode">
            <summary>
                Gets the UpdateMode.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameTimer.IsCompleted">
            <summary>
                A value indicating whether the GameTimer is completed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.GameTimer.Action">
            <summary>
                Sets or gets the Action, which get called after the GameTimer is completed.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.PrecisionTimer.#ctor">
            <summary>
                Initializes a new PrecisionTimer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Game.Timing.PrecisionTimer.#ctor(System.Single)">
            <summary>
                Initializes a new PrecisionTimer class.
            </summary>
            <param name="interval">The Interval.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.PrecisionTimer.Interval">
            <summary>
                Sets or gets the Intervall.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.PrecisionTimer.IsRunning">
            <summary>
                A value indicating whether the GameTimer is running.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.PrecisionTimer.IsCompleted">
            <summary>
                A value indicating whether the GameTimer is completed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Game.Timing.PrecisionTimer.Action">
            <summary>
                Sets or gets the Action, which get called after the GameTimer is completed.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Game.Timing.RenderMode.Limited">
            <summary>
                Limits the render call to a fixed fps amount.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Game.Timing.RenderMode.Unlimited">
            <summary>
                No limitations.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Game.Simulation.Time.TimeMode.Simulated">
            <summary>
                Simulate time.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Game.Simulation.Time.TimeMode.RealTime">
            <summary>
                Use real time.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.Synchronizer.#ctor">
            <summary>
                Initializes a new Synchronizer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.Synchronizer.InternalIsSynced">
            <summary>
                InternalIsSynced.
            </summary>
            <returns>True if synced.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.Synchronizer.Synchronize">
            <summary>
                Synchronizes into the Synchronizer.
            </summary>
            <returns>SynchronizeObject</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.Synchronizer.Asynchron(Sharpex2D.Framework.Common.Threads.Synchronizer.Locker)">
            <summary>
                Asynchronizes from the Synchronizer.
            </summary>
            <param name="syncObject">The SynchronizeObject</param>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Threads.Synchronizer.IsSynced">
            <summary>
                A value indicating whether the two Objects are synced.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Threads.Synchronizer.Locker.#ctor(System.Guid)">
            <summary>
                Initializes a new SynchronizeObject class.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Threads.Synchronizer.Locker.Synced">
            <summary>
                A value indicating whether the SynchronizeObject is synced.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Threads.Synchronizer.Locker.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Game.Timing.UpdateMode.OnGameUpdate">
            <summary>
                Updates the timer via GameLoop.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Game.Timing.UpdateMode.OnThreadUpdate">
            <summary>
                Updates the timer in a new thread.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryDeviceType.BATTERY_DEVTYPE_GAMEPAD">
            <summary>
                Gamepad.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryDeviceType.BATTERY_DEVTYPE_HEADSET">
            <summary>
                Headset.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryLevel.BATTERY_LEVEL_EMPTY">
            <summary>
                Empty.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryLevel.BATTERY_LEVEL_LOW">
            <summary>
                Low.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryLevel.BATTERY_LEVEL_MEDIUM">
            <summary>
                Medium.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryLevel.BATTERY_LEVEL_FULL">
            <summary>
                Full.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryType.BATTERY_TYPE_DISCONNECTED">
            <summary>
                Device not connected.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryType.BATTERY_TYPE_WIRED">
            <summary>
                Wired, no battery.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryType.BATTERY_TYPE_ALKALINE">
            <summary>
                Alkaline.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryType.BATTERY_TYPE_NIMH">
            <summary>
                Nickel Metal Hydride.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.BatteryType.BATTERY_TYPE_UNKNOWN">
            <summary>
                Unknown.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_DPAD_UP">
            <summary>
                D-Pad Up.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_DPAD_DOWN">
            <summary>
                D-Pad Down.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_DPAD_LEFT">
            <summary>
                D-Pad Left.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_DPAD_RIGHT">
            <summary>
                D-Pad Right.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_START">
            <summary>
                Start.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_BACK">
            <summary>
                Back.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_LEFT_THUMB">
            <summary>
                Left Thumb.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_RIGHT_THUMB">
            <summary>
                Right Thumb.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_LEFT_SHOULDER">
            <summary>
                Left Shoulder.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_RIGHT_SHOULDER">
            <summary>
                Right Shoulder.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_A">
            <summary>
                A.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_B">
            <summary>
                B.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_X">
            <summary>
                X.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.ButtonFlags.XINPUT_GAMEPAD_Y">
            <summary>
                Y.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.CapabilityFlags.XINPUT_CAPS_VOICE_SUPPORTED">
            <summary>
                Voice supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.CapabilityFlags.XINPUT_CAPS_FFB_SUPPORTED">
            <summary>
                FFB supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.CapabilityFlags.XINPUT_CAPS_WIRELESS">
            <summary>
                Wireless.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.CapabilityFlags.XINPUT_CAPS_PMD_SUPPORTED">
            <summary>
                PMD supported.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.CapabilityFlags.XINPUT_CAPS_NO_NAVIGATION">
            <summary>
                No navigation.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_UNKNOWN">
            <summary>
                Unknown.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_WHEEL">
            <summary>
                Wheel.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_ARCADE_STICK">
            <summary>
                Arcade stick.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_FLIGHT_STICK">
            <summary>
                Flight stick.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_DANCE_PAD">
            <summary>
                Dance pad.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_GUITAR">
            <summary>
                Guitar.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_GUITAR_ALTERNATE">
            <summary>
                Guitar alternate.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_DRUM_KIT">
            <summary>
                Drum kit.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_GUITAR_BASS">
            <summary>
                Guitar bass.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.Subtypes.XINPUT_DEVSUBTYPE_ARCADE_PAD">
            <summary>
                Arcade pad.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.IDevice.InitializeDevice">
            <summary>
                Initializes the Device.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.IDevice.IsEnabled">
            <summary>
                A value indicating whether the device is enabled.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.IDevice.Description">
            <summary>
                Gets the device description.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.Devices.XboxController.MaxControllerCount">
            <summary>
                Maximum Controller input.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.Devices.XboxController.FirstControllerIndex">
            <summary>
                StartIndex.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.Devices.XboxController.LastControllerIndex">
            <summary>
                LastIndex.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.InitializeDevice">
            <summary>
                Initializes the Device.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.Construct">
            <summary>
                Constructs the component.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.Devices.XboxController.Controllers">
            <summary>
                Gets the Available Controllers.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.#cctor">
            <summary>
                Initializes a new XboxController class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.#ctor(System.Int32)">
            <summary>
                Initializes a new XboxController class.
            </summary>
            <param name="playerIndex">The Index.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.Retrieve(System.Int32)">
            <summary>
                Retrieves the XBoxController.
            </summary>
            <param name="index">The Index.</param>
            <returns>XboxController.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.UpdateBatteryState">
            <summary>
                Updates the BatteryState.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.OnStateChanged">
            <summary>
                Triggers the events.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.GetCapabilities">
            <summary>
                Gets the Capabilities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.UpdateState">
            <summary>
                Updates the Controller state.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.Vibrate(System.Double,System.Double,System.Single)">
            <summary>
                Vibrates the controller.
            </summary>
            <param name="leftMotor">The LeftMotor.</param>
            <param name="rightMotor">The RightMotor.</param>
            <param name="length">The Length.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.Vibrate(Sharpex2D.Framework.Input.XInput.XInputVibration,System.TimeSpan)">
            <summary>
                Vibrates the controller.
            </summary>
            <param name="strength">The Strength.</param>
            <param name="length">The Length.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.XboxController.ToString">
            <summary>
                Converts the object to string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsEnabled">
            <summary>
                A value indicating whether the device is enabled.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.Description">
            <summary>
                Gets the Description.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.BatteryInformationGamepad">
            <summary>
                Gets the Gamepad BatteryInformation.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.BatteryInformationHeadset">
            <summary>
                Gets the Headset BatteryInformation.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsDPadUpPressed">
            <summary>
                A value indicating whether the D-Pad up is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsDPadDownPressed">
            <summary>
                A value indicating whether the D-Pad down is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsDPadLeftPressed">
            <summary>
                A value indicating whether the D-Pad left is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsDPadRightPressed">
            <summary>
                A value indicating whether the D-Pad right is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsAPressed">
            <summary>
                A value indicating whether A is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsBPressed">
            <summary>
                A value indicating whether B is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsXPressed">
            <summary>
                A value indicating whether X is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsYPressed">
            <summary>
                A value indicating whether Y is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsBackPressed">
            <summary>
                A value indicating whether back is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsStartPressed">
            <summary>
                A value indicating whether start is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsLeftShoulderPressed">
            <summary>
                A value indicating whether left-shoulder is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsRightShoulderPressed">
            <summary>
                A value indicating whether right-shoulder is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsLeftStickPressed">
            <summary>
                A value indicating whether left-stick is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsRightStickPressed">
            <summary>
                A value indicating whether right-stick is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.LeftTrigger">
            <summary>
                A value indicating whether left-trigger is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.RightTrigger">
            <summary>
                A value indicating whether right-trigger is pressed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.LeftThumbStick">
            <summary>
                Gets the LeftThumbStick.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.RightThumbStick">
            <summary>
                Gets the RightThumbStick.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.XboxController.IsConnected">
            <summary>
                A value indicating whether the Controller is Connected.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Events.XboxControllerStateChangedEventArgs.CurrentInputState">
            <summary>
                Sets or gets the CurrentInputState.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Events.XboxControllerStateChangedEventArgs.PreviousInputState">
            <summary>
                Sets or gets the PreviousInputState.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputBatteryInformation.BatteryType">
            <summary>
                The BatteryType.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputBatteryInformation.BatteryLevel">
            <summary>
                The BatteryLevel.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputBatteryInformation.ToString">
            <summary>
                Converts the object to string.
            </summary>
            <returns>String.</returns>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputCapabilities.Type">
            <summary>
                The Type.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputCapabilities.SubType">
            <summary>
                The SubType.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputCapabilities.Flags">
            <summary>
                The Flags.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputCapabilities.Gamepad">
            <summary>
                The Gamepad.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputCapabilities.Vibration">
            <summary>
                The Vibration.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputConstants.XINPUT_DEVTYPE_GAMEPAD">
            <summary>
                Devtype Gamepad.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputConstants.XINPUT_DEVSUBTYPE_GAMEPAD">
            <summary>
                Subtype gamepad.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputConstants.XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE">
            <summary>
                Threshold Left thumb deadzone.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputConstants.XINPUT_GAMEPAD_RIGHT_THUMB_DEADZONE">
            <summary>
                Threshold Right thumb deadzone.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputConstants.XINPUT_GAMEPAD_TRIGGER_THRESHOLD">
            <summary>
                Threshold trigger deadzone.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputConstants.XINPUT_FLAG_GAMEPAD">
            <summary>
                Flag Gamepad.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.wButtons">
            <summary>
                The Buttons.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.bLeftTrigger">
            <summary>
                The back left trigger.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.bRightTrigger">
            <summary>
                The back right trigger.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.sThumbLX">
            <summary>
                The thumb left X.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.sThumbLY">
            <summary>
                The thumb left Y.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.sThumbRX">
            <summary>
                The thumb right X.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputGamepad.sThumbRY">
            <summary>
                The thumb right Y.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputGamepad.IsButtonPressed(System.Int32)">
            <summary>
                A value indicating whether the button was pressed.
            </summary>
            <param name="buttonFlags">The ButtonFlags.</param>
            <returns>True if the button was pressed.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputGamepad.IsButtonPresent(System.Int32)">
            <summary>
                A value indicating whether the button is accessable on the gamepad.
            </summary>
            <param name="buttonFlags">The ButtonFlags.</param>
            <returns>True if accessable.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputGamepad.Copy(Sharpex2D.Framework.Input.XInput.XInputGamepad)">
            <summary>
                Copies the source.
            </summary>
            <param name="source">The Source.</param>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputKeystroke.VirtualKey">
            <summary>
                The VirtualKey.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputKeystroke.Unicode">
            <summary>
                The Unicode char.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputKeystroke.Flags">
            <summary>
                The Flags.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputKeystroke.UserIndex">
            <summary>
                The UserIndex.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputKeystroke.HidCode">
            <summary>
                The HIDCode.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputState.PacketNumber">
            <summary>
                The PacketNumber.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputState.Gamepad">
            <summary>
                The Gamepad.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputState.Copy(Sharpex2D.Framework.Input.XInput.XInputState)">
            <summary>
                Copies the source.
            </summary>
            <param name="source">The Source.</param>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputVibration.LeftMotorSpeed">
            <summary>
                The LeftMotorSpeed.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.XInput.XInputVibration.RightMotorSpeed">
            <summary>
                The RightMotorSpeed.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.IKeyboard.IsKeyPressed(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a specific key is pressed.
            </summary>
            <param name="key">The Key.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.IKeyboard.IsKeyUp(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a specific key is pushed up.
            </summary>
            <param name="key">The Key.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.IKeyboard.IsKeyDown(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a specific key is pressed down.
            </summary>
            <param name="key">The Key.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.InitializeDevice">
            <summary>
                Initializes the Device.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Called if the component should get updated.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.Construct">
            <summary>
                Called if the component get initialized.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.IsKeyDown(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a specific key is pressed down.
            </summary>
            <param name="key">The Key.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.IsKeyUp(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a specific key is pushed up.
            </summary>
            <param name="key">The Key.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.IsKeyPressed(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a specific key is pressed.
            </summary>
            <param name="key">The Key.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.#ctor(System.IntPtr)">
            <summary>
                Initializes a new FluentKeyboard class.
            </summary>
            <param name="surfaceHandle">The SurfaceHandle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard._surface_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
                The KeyUp Event.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard._surface_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
                The KeyDown Event.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Keyboard.SetKeyState(Sharpex2D.Framework.Input.Keys,System.Boolean)">
            <summary>
                Sets the internal KeyState.
            </summary>
            <param name="key">The Key.</param>
            <param name="state">The State.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Keyboard.IsEnabled">
            <summary>
                A value indicating whether the device is enabled.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Keyboard.Guid">
            <summary>
                Gets the Guid-Identifer of the device.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Keyboard.Description">
            <summary>
                Gets the device description.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.IMouse.IsButtonReleased(Sharpex2D.Framework.Input.MouseButtons)">
            <summary>
                Determines, if a specific button is released.
            </summary>
            <param name="button">The Button.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.IMouse.IsButtonPressed(Sharpex2D.Framework.Input.MouseButtons)">
            <summary>
                Determines, if a specific button is pressed.
            </summary>
            <param name="button">The Button.</param>
            <returns>Boolean</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Input.IMouse.Position">
            <summary>
                Gets the current MousePosition.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.Construct">
            <summary>
                Constructs the Element.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.InitializeDevice">
            <summary>
                Initializes the Device.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.IsButtonPressed(Sharpex2D.Framework.Input.MouseButtons)">
            <summary>
                Determines, if a specific button is pressed.
            </summary>
            <param name="button">The Button.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.IsButtonReleased(Sharpex2D.Framework.Input.MouseButtons)">
            <summary>
                Determines, if a specific button is released.
            </summary>
            <param name="button">The Button.</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.#ctor(System.IntPtr)">
            <summary>
                Initializes a new Mouse class.
            </summary>
            <param name="handle">The Handle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Devices.Mouse.SetButtonState(Sharpex2D.Framework.Input.MouseButtons,System.Boolean)">
            <summary>
                Sets the internal button state.
            </summary>
            <param name="button">The Button.</param>
            <param name="state">The State.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Mouse.IsEnabled">
            <summary>
                A value indicating whether the device is enabled.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Mouse.Guid">
            <summary>
                Gets the Guid-Identifer of the device.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Mouse.Description">
            <summary>
                Gets the device description.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Mouse.Position">
            <summary>
                Gets the current MousePosition.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Devices.Mouse.Handle">
            <summary>
                Represents the surface handle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputAPI.XInputGetState(System.Int32,Sharpex2D.Framework.Input.XInput.XInputState@)">
            <summary>
                Gets the XInput state.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="pState">The InputState.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputAPI.XInputSetState(System.Int32,Sharpex2D.Framework.Input.XInput.XInputVibration@)">
            <summary>
                Sets the Input state.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="pVibration">The Vibration.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputAPI.XInputGetCapabilities(System.Int32,System.Int32,Sharpex2D.Framework.Input.XInput.XInputCapabilities@)">
            <summary>
                Gets the Capabilities.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="dwFlags">The dwFlags.</param>
            <param name="pCapabilities">The Capabilities.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.XInput.XInputAPI.XInputGetBatteryInformation(System.Int32,System.Byte,Sharpex2D.Framework.Input.XInput.XInputBatteryInformation@)">
            <summary>
                Gets the Battery information.
            </summary>
            <param name="dwUserIndex">The Index.</param>
            <param name="devType">The DevType.</param>
            <param name="pBatteryInformation">The BatteryInformation.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.Events.MouseLocationChangedEvent.#ctor(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Initializes a new MouseLocationChanged Event.
            </summary>
            <param name="location"></param>
        </member>
        <member name="P:Sharpex2D.Framework.Input.Events.MouseLocationChangedEvent.Location">
            <summary>
                Gets the Location of the Mouse.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.Construct">
            <summary>
                Constructs the Component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.GetEnumerator">
            <summary>
                Gets the Enumerator.
            </summary>
            <returns>IEnumerator.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Gets the Enumerator.
            </summary>
            <returns>IEnumerator.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.#ctor(System.IntPtr)">
            <summary>
                Initializes a new InputManager Instance.
            </summary>
            <param name="handle">The GameWindowHandle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.SetStandardKeyboard(Sharpex2D.Framework.Input.IKeyboard)">
            <summary>
                Sets the standard keyboard.
            </summary>
            <param name="keyboard">The Keyboard.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.SetStandardMouse(Sharpex2D.Framework.Input.IMouse)">
            <summary>
                Sets the standard mouse.
            </summary>
            <param name="mouse">The Mouse.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.GetDevices">
            <summary>
                Gets all Devices.
            </summary>
            <returns>IDevice Array</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.Add(Sharpex2D.Framework.Input.IDevice)">
            <summary>
                Adds a new device to the InputManager.
            </summary>
            <param name="device">The Device.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.Remove(Sharpex2D.Framework.Input.IDevice)">
            <summary>
                Removes a device from the InputManager.
            </summary>
            <param name="device">The Device.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Input.InputManager.Get``1">
            <summary>
                Gets a special device.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>Device</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Input.InputManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.InputManager.Keyboard">
            <summary>
                Gets the KeyboardListener.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Input.InputManager.Mouse">
            <summary>
                Gets the MouseListener.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.MouseButtons.Left">
            <summary>The left button was pressed.</summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.MouseButtons.None">
            <summary>No button was pressed.</summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.MouseButtons.Right">
            <summary>The right button was pressed.</summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.MouseButtons.Middle">
            <summary>The middle button was pressed.</summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.MouseButtons.XButton1">
            <summary>The XButton1 was pressed.</summary>
        </member>
        <member name="F:Sharpex2D.Framework.Input.MouseButtons.XButton2">
            <summary>The XButton2 was pressed.</summary>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.Events.LanguageChangedEvent.#ctor(Sharpex2D.Framework.Localization.Language)">
            <summary>
                Creates a new LanguageChanged Event.
            </summary>
            <param name="language">The SelectedLanguage.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Localization.Events.LanguageChangedEvent.SelectedLanguage">
            <summary>
                Gets the SelectedLanguage.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Localization.Language.Guid">
            <summary>
                Gets or sets the guid of the language.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageProvider.ChangeLanguage(System.Guid)">
            <summary>
                Changes the current language.
            </summary>
            <param name="guid">The LanguageGuide.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageProvider.GetLocalizedString(System.String)">
            <summary>
                Gets the LocalizedString from the current Language.
            </summary>
            <param name="id">The Id.</param>
            <returns>String</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageProvider.LoadLanguage(System.String)">
            <summary>
                Loads a language based on the Path.
            </summary>
            <param name="path">The Filepath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageProvider.LoadLanguagesFromDirectory(System.String)">
            <summary>
                Loads a languages in the given Directory.
            </summary>
            <param name="directoryPath">The DirectoryPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageSerializationException.#ctor">
            <summary>
                Initializes a new LanguageSerializationException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageSerializationException.#ctor(System.String)">
            <summary>
                Initializes a new LanguageSerializationException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageSerializationException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new LanguageSerializationException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new LanguageSerializationException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageSerializer.Serialize(System.String,Sharpex2D.Framework.Localization.Language)">
            <summary>
                Serializes the given Language.
            </summary>
            <param name="path">The Filepath.</param>
            <param name="language">The Language.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Localization.LanguageSerializer.Deserialize(System.String)">
            <summary>
                Deserializes a Language.
            </summary>
            <param name="path">The Path.</param>
            <returns>Language</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Localization.LocalizedValue.Id">
            <summary>
                Gets or sets the Id of the LocalizedValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Localization.LocalizedValue.LocalizedString">
            <summary>
                Sets or gets the value of the LocalizedString.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Circle.#ctor(Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Creates a new Circle.
            </summary>
            <param name="position">The Position.</param>
            <param name="radius">The Radius.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Circle.Distance(Sharpex2D.Framework.Math.Circle,Sharpex2D.Framework.Math.Circle)">
            <summary>
                Gets the Distance between two circles.
            </summary>
            <param name="circle1">The first Circle.</param>
            <param name="circle2">The second Circle.</param>
            <returns>Distance</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Circle.Distance(Sharpex2D.Framework.Math.Circle)">
            <summary>
                Gets the Distance between this, and a second Circle.
            </summary>
            <param name="circle">The second Circle.</param>
            <returns>Distance</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Circle.IntersectsWith(Sharpex2D.Framework.Math.Circle)">
            <summary>
                Indicates whether the Circle intersects with another Circle.
            </summary>
            <param name="circle">The second Circle.</param>
            <returns>True on intersect</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Circle.Intersects(Sharpex2D.Framework.Math.Circle,Sharpex2D.Framework.Math.Circle)">
            <summary>
                Indicates whether the first Circle intersects with the second Circle.
            </summary>
            <param name="circle1">The first Circle.</param>
            <param name="circle2">The second Circle.</param>
            <returns>True on intersect</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Circle.ToString">
            <summary>
                Converts the circle in to a string.
            </summary>
            <returns>String</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Circle.Radius">
            <summary>
                Gets or sets the Circle radius.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Circle.Position">
            <summary>
                Gets or sets the center point of the Circle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Ellipse.#ctor(System.Single,System.Single)">
            <summary>
                Initializes a new Ellipse class.
            </summary>
            <param name="radiusX">The X-Radius.</param>
            <param name="radiusY">The Y-Radius.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Ellipse.UpdateEllipse">
            <summary>
                Updates the Ellipse if something changed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Ellipse.Position">
            <summary>
                Sets or gets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Ellipse.RadiusX">
            <summary>
                Gets the X-Radius.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Ellipse.RadiusY">
            <summary>
                Gets the Y-Radius.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Ellipse.Points">
            <summary>
                Gets the points.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new Matrix class.
            </summary>
            <param name="columns">The amount of Columns.</param>
            <param name="rows">The amount of Rows.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Clone">
            <summary>
                Clones the Matrix.
            </summary>
            <returns>Object</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Set(System.Int32,System.Int32,System.Double)">
            <summary>
                Sets a value of the element.
            </summary>
            <param name="column">The Column.</param>
            <param name="row">The Row.</param>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Get(System.Int32,System.Int32)">
            <summary>
                Gets the value of the element.
            </summary>
            <param name="column">The Column.</param>
            <param name="row">The Row.</param>
            <returns>The value of the element</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.ToString">
            <summary>
                Converts the Matrix in to a string.
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Equals(Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Check if another matrix is equal to the current matrix.
            </summary>
            <param name="other">The Matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Equals(System.Object)">
            <summary>
                Check if another matrix is equal to the current matrix.
            </summary>
            <param name="obj">The Matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.GetHashCode">
            <summary>
                Gets the HashCode.
            </summary>
            <returns>Int32</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.CheckForNull(Sharpex2D.Framework.Math.Matrix[])">
            <summary>
                Checks for Null.
            </summary>
            <param name="matrices">The Matrices.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.CopyTo(Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Copys the current Matrix to another matrix.
            </summary>
            <param name="matrix">The Matrix.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Resize(System.Int32,System.Int32)">
            <summary>
                Resizes the matrix.
            </summary>
            <param name="columns">The Columns.</param>
            <param name="rows">The Rows.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.op_Addition(Sharpex2D.Framework.Math.Matrix,Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Addition of two matrices.
            </summary>
            <param name="a">The first Matrix.</param>
            <param name="b">The second Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.op_Subtraction(Sharpex2D.Framework.Math.Matrix,Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Substraction of two matrices.
            </summary>
            <param name="a">The first Matrix.</param>
            <param name="b">The second Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.op_Multiply(Sharpex2D.Framework.Math.Matrix,Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Multiplys two matrices.
            </summary>
            <param name="a">The first Matrix.</param>
            <param name="b">The second Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.op_Multiply(Sharpex2D.Framework.Math.Matrix,System.Double)">
            <summary>
                Scalarmultiply with a matrix.
            </summary>
            <param name="a">The Matrix.</param>
            <param name="scalar">The Scalar</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.op_Multiply(System.Double,Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Scalarmultiply with a matrix.
            </summary>
            <param name="a">The Matrix.</param>
            <param name="scalar">The Scalar</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.op_Division(Sharpex2D.Framework.Math.Matrix,Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Divide two matrices.
            </summary>
            <param name="a">The first Matrix.</param>
            <param name="b">The second Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Addition(Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Addition with another matrix.
            </summary>
            <param name="other">The Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Subtract(Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Substract with another matrix.
            </summary>
            <param name="other">The Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Multiply(Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Multiply with another matrix.
            </summary>
            <param name="other">The Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Multiply(System.Double)">
            <summary>
                Multiply with a scalar.
            </summary>
            <param name="scalar">The Scalar.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Divide(Sharpex2D.Framework.Math.Matrix)">
            <summary>
                Divide with another matrix.
            </summary>
            <param name="other">The Matrix.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Pow(System.Double)">
            <summary>
                Pow the matrix.
            </summary>
            <param name="exponent">The Exponent.</param>
            <returns>Matrix</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix.Transpose">
            <summary>
                Transposes the matrix.
            </summary>
            <returns>Matrix</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix.Columns">
            <summary>
                Gets the amount of columns.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix.Rows">
            <summary>
                Gets the amount of rows.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.Matrix2x3.Identity">
            <summary>
                The identity matrix.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.#cctor">
            <summary>
                Initializes a new Matrix2x3 class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.ApplyTo(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Applies this matrix to a point.
            </summary>
            <returns>Vector2.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.ApplyTo(Sharpex2D.Framework.Math.Vector2[])">
            <summary>
                Applies this matrix to an array of vectors.
            </summary>
            <returns>Vector2 Array.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.MultiplyRow(System.Int32,System.Single)">
            <summary>
                Multiplies the rows.
            </summary>
            <param name="row">The Row.</param>
            <param name="factor">The Factor.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.SwapRows">
            <summary>
                Swaps the rows.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.SubtractRows(System.Int32,System.Int32,System.Single)">
            <summary>
                Subtracts the rows.
            </summary>
            <param name="row1">The first Row.</param>
            <param name="row2">The second Row.</param>
            <param name="factor">The Factor.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Invert">
            <summary>
                Returns the inverse matrix of this matrix.
            </summary>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Scaling(System.Single,System.Single)">
            <summary>
                Creates a scaling matrix.
            </summary>
            <param name="factorX">The X Factor.</param>
            <param name="factorY">The Y Factor.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Scaling(System.Single)">
            <summary>
                Creates a scaling matrix.
            </summary>
            <param name="factor">The Factor.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Translation(System.Single,System.Single)">
            <summary>
                Creates a translation matrix.
            </summary>
            <param name="x">The X.</param>
            <param name="y">The Y.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Translation(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Creates a translation matrix.
            </summary>
            <param name="vector">The Vector.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Rotation(System.Single)">
            <summary>
                Creates a rotation matrix.
            </summary>
            <param name="angle">The Angle.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.ShearingX(System.Single)">
            <summary>
                Creates a shearing matrix.
            </summary>
            <param name="value">The Value.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.ShearingY(System.Single)">
            <summary>
                Creates a shearing matrix.
            </summary>
            <param name="value">The Value.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.Multiply(Sharpex2D.Framework.Math.Matrix2x3,Sharpex2D.Framework.Math.Matrix2x3)">
            <summary>
                Multiplies two matrices.
            </summary>
            <param name="left">The left matrix.</param>
            <param name="right">The right matrix.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Matrix2x3.op_Multiply(Sharpex2D.Framework.Math.Matrix2x3,Sharpex2D.Framework.Math.Matrix2x3)">
            <summary>
                Multiplies two matrices.
            </summary>
            <param name="left">The left matrix.</param>
            <param name="right">The right matrix.</param>
            <returns>Matrix2x3.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix2x3.Item(System.Int32,System.Int32)">
            <summary>
                Returns or sets the matrix element at the given Position.
            </summary>
            <returns>Float.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix2x3.OffsetX">
            <summary>
                Sets or gets the OffsetX.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix2x3.OffsetY">
            <summary>
                Sets or gets the OffsetY.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix2x3.Determinant">
            <summary>
                Gets the Determinant.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Matrix2x3.IsIdentity">
            <summary>
                A value indicating whether this matrix is the identity matrix.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.#ctor">
            <summary>
                Initializes a new Polygon class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.Add(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Adds a Vector to the Polygon.
            </summary>
            <param name="point">The Vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.Add(Sharpex2D.Framework.Math.Vector2[])">
            <summary>
                Adds a array of Vector to the Polygon.
            </summary>
            <param name="points">The Vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.Reset">
            <summary>
                Resets the Polygon.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.UpdateEdges">
            <summary>
                Updates the edges.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.UpdatePoints">
            <summary>
                Updates the points.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.Intersects(Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Indicating whether the polygon is intersecting with another one.
            </summary>
            <param name="otherPolygon">The Polygon.</param>
            <returns>True if the polygons are intersecting.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.GetCollisionResult(Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Gets the collision result between two polygons.
            </summary>
            <param name="otherPolygon">The Polygon.</param>
            <returns>PolygonCollisionResult.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.GetCollisionResult(Sharpex2D.Framework.Math.Polygon,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Gets the collision result between two polygons.
            </summary>
            <param name="otherPolygon">The Polygon.</param>
            <param name="velocity">The Velocity.</param>
            <returns>PolygonCollisionResult.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.IntervalDistance(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Gets the interval distance.
            </summary>
            <param name="minA">The MinimumA.</param>
            <param name="maxA">The MaximumA.</param>
            <param name="minB">The MinimumB.</param>
            <param name="maxB">The MaximumB.</param>
            <returns>Float.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.ProjectPolygon(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Polygon,System.Single@,System.Single@)">
            <summary>
                Projects the Polygon.
            </summary>
            <param name="axis">The Axis.</param>
            <param name="polygon">The Polygon.</param>
            <param name="min">The Minimum.</param>
            <param name="max">The Maximum.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.PolygonCollision(Sharpex2D.Framework.Math.Polygon,Sharpex2D.Framework.Math.Polygon,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Calculates the Polygon collision.
            </summary>
            <param name="polygonA">The first Polygon.</param>
            <param name="polygonB">The second Polygon.</param>
            <param name="velocity">The Velocity.</param>
            <returns>PolygonCollisionResult.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.FromRectangle(Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Creates a new Polygon from rectangle.
            </summary>
            <param name="rectangle">The Rectangle.</param>
            <returns>Polygon.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Polygon.FromEllipse(Sharpex2D.Framework.Math.Ellipse)">
            <summary>
                Creates a new Polygon from ellipse.
            </summary>
            <param name="ellipse">The Ellipse.</param>
            <returns>Polygon.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Polygon.Center">
            <summary>
                Gets the Center of the Polygon.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Polygon.IsValid">
            <summary>
                A value indicating whether the Polygon is valid.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Polygon.Points">
            <summary>
                Gets the coordinates of the Polygon.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Polygon.Offset">
            <summary>
                Sets or gets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Polygon.Edges">
            <summary>
                Gets the Edges.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonCollisionResult.#ctor">
            <summary>
                Initializes a new PolygonCollisionResult class.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.PolygonCollisionResult.WillIntersect">
            <summary>
                A value indicating whether the Polygons will intersect.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.PolygonCollisionResult.Intersect">
            <summary>
                A value indicating whether the Polygons intersects with each other.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.PolygonCollisionResult.MinimumTranslationVector">
            <summary>
                Gets the MinimumTranslationVector to avoid collision.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.#ctor">
            <summary>
                Initializes a new PolygonContainer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.Add(System.Int32,Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Adds a new Polygon.
            </summary>
            <param name="index">The Index.</param>
            <param name="polygon">The Polygon.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.Remove(System.Int32)">
            <summary>
                Removes a Polygon.
            </summary>
            <param name="index">The Index.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.Intersects(Sharpex2D.Framework.Math.Polygon)">
            <summary>
                A value indicating whether the Polygon intersects with the PolygonContainer.
            </summary>
            <param name="polygon">The Polygon.</param>
            <returns>True if intersecting.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.Intersects(Sharpex2D.Framework.Math.PolygonContainer)">
            <summary>
                A value indicating whether the PolygonContainer intersects with this PolygonContainer.
            </summary>
            <param name="polygonContainer">The PolygonContainer.</param>
            <returns>True if intersecting.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.IntersectsWith(Sharpex2D.Framework.Math.Polygon,System.Int32[]@)">
            <summary>
                A value indicating whether the Polygon intersects with the PolygonContainer.
            </summary>
            <param name="polygon">The Polygon.</param>
            <param name="indices">The Indices which are intersects.</param>
            <returns>True if intersecting.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.PolygonContainer.IntersectsWith(Sharpex2D.Framework.Math.PolygonContainer,System.Int32[]@)">
            <summary>
                A value indicating whether the PolygonContainer intersects with this PolygonContainer.
            </summary>
            <param name="polygonContainer">The PolygonContainer.</param>
            <param name="indices">The Indices which are intersects.</param>
            <returns>True if intersecting.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Math.PolygonContainer.Offset">
            <summary>
                Gets or sets the Offset.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.PolygonContainer.Polygons">
            <summary>
                Gets the Polygons.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Sharpex2D.Framework.Math.Rectangle"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.#ctor(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Sharpex2D.Framework.Math.Rectangle"/> struct.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.Contains(Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Determines whether this instance contains the specified rectangle.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.Contains(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Determines whether this instance contains the specified vector.
            </summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.Intersects(Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Intersectses the specified rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.Intersect(Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Intersects the specified rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.ToString">
            <summary>
                Converts the Rectangle to a string.
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.op_Addition(Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator +.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.op_Subtraction(Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator -.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.op_Multiply(Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator *.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.op_Multiply(Sharpex2D.Framework.Math.Rectangle,System.Single)">
            <summary>
                Implements the operator *.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.op_Division(Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator /.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Rectangle.op_Division(Sharpex2D.Framework.Math.Rectangle,System.Single)">
            <summary>
                Implements the operator /.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.X">
            <summary>
                Gets or sets the X-coordinate.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Y">
            <summary>
                Gets or sets the Y-coordinate.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Width">
            <summary>
                Gets or sets the width.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Height">
            <summary>
                Gets or sets the height.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Left">
            <summary>
                Gets the left.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Right">
            <summary>
                Gets the right.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Top">
            <summary>
                Gets the top.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Bottom">
            <summary>
                Gets the bottom.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Location">
            <summary>
                Gets the location.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Center">
            <summary>
                Gets the center.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Rectangle.Empty">
            <summary>
                Gets an empty rectangle instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundEffect.#ctor(Sharpex2D.Framework.Audio.Sound)">
            <summary>
                Initializes a new SoundEffect.
            </summary>
            <param name="sound">The Sound.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundEffect.Play">
            <summary>
                Plays the SoundEffect.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundEffect.Balance">
            <summary>
                Sets or gets the Balance.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundEffect.Volume">
            <summary>
                Sets or gets the Volume.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundEffect.Sound">
            <summary>
                Sets or gets the Sound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundEffect.Muted">
            <summary>
                A value indicating whether the sound is muted.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.wFormatTag">
            <summary>
                Waveform-audio format type.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.nChannels">
            <summary>
                Channels.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.nSamplesPerSec">
            <summary>
                Samples per second.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.nAvgBytesPerSec">
            <summary>
                Average bytes per seconds.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.nBlockAlign">
            <summary>
                BlockAlign.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.wBitsPerSample">
            <summary>
                Bits per sample.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.cbSize">
            <summary>
                Extra attributes.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new WaveFormat class.
            </summary>
            <param name="rate">The SamplesPerSecond.</param>
            <param name="bits">The BitsPerSample.</param>
            <param name="channels">The Channels.</param>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormats.Pcm">
            <summary>
                Pcm.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveFormats.Float">
            <summary>
                Float.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.lpData">
            <summary>
                Pointer to waveform buffer.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.dwBufferLength">
            <summary>
                Length of the buffer.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.dwBytesRecorded">
            <summary>
                Amount of data in the buffer.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.dwUser">
            <summary>
                User data.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.dwFlags">
            <summary>
                The Flags.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.dwLoops">
            <summary>
                Amount of loops.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.lpNext">
            <summary>
                Reserved.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Audio.WaveOut.WaveHdr.reserved">
            <summary>
                Reserved.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.WaveOut.WaveOutResult.Try(System.Int32)">
            <summary>
                Trys a WaveOut operation.
            </summary>
            <param name="result">The Result.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Logic.IClientListener.OnClientJoined(Sharpex2D.Framework.Network.IConnection)">
            <summary>
                Called if a client joined on the server.
            </summary>
            <param name="connection">The IPAddress.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Logic.IClientListener.OnClientExited(Sharpex2D.Framework.Network.IConnection)">
            <summary>
                Called if a client exited.
            </summary>
            <param name="connection">The IPAddress.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Logic.IClientListener.OnClientListing(Sharpex2D.Framework.Network.IConnection[])">
            <summary>
                Called if the server sends a client list.
            </summary>
            <param name="connections">The Connections.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Logic.IClientListener.OnServerShutdown">
            <summary>
                Called if the server is closing.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Logic.IClientListener.OnClientTimedOut">
            <summary>
                Called, if our client timed out.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Logic.IClientListener.Client">
            <summary>
                Gets the client instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.IBasePackage.SerializeContent(System.Object)">
            <summary>
                Serializes an object into the Content.
            </summary>
            <param name="content">The Object.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.IBasePackage.DeserializeContent``1">
            <summary>
                Deserializes an object out of the Content.
            </summary>
            <returns>The Object.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.IBasePackage.OriginType">
            <summary>
                Gets or sets the type of the package Content
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.IBasePackage.Content">
            <summary>
                Gets or sets the serialized package content.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.IBasePackage.Identifer">
            <summary>
                Sets or gets the package identifer.
            </summary>
            <remarks>This is not neccessary for serialization.</remarks>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.IBasePackage.Sender">
            <summary>
                Gets the sender.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.IBasePackage.Receiver">
            <summary>
                Gets the receiver.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.BasePackage.SerializeContent(System.Object)">
            <summary>
                Serializes an object into the Content.
            </summary>
            <param name="content">The Object.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.BasePackage.DeserializeContent``1">
            <summary>
                Deserializes an object out of the Content.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <remarks>The type is determined by the OriginType Property.</remarks>
            <returns>The Object.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.BasePackage.OriginType">
            <summary>
                Gets or sets the type of the package Content
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.BasePackage.Content">
            <summary>
                Gets or sets the serialized package content.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.BasePackage.Identifer">
            <summary>
                Sets or gets the package identifer.
            </summary>
            <remarks>This is not neccessary for serialization.</remarks>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.BasePackage.Sender">
            <summary>
                Gets the sender.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.BasePackage.Receiver">
            <summary>
                Gets the receiver.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.System.UdpPackage.#ctor(Sharpex2D.Framework.Network.Packages.System.UdpNotify)">
            <summary>
                Initializes a new UdpPackage class.
            </summary>
            <param name="notify">The UdpNotifyMode.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.System.UdpPackage.NotifyMode">
            <summary>
                Gets the notify mode of this package.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.ISender.Send(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.ISender.Send(Sharpex2D.Framework.Network.Packages.IBasePackage,System.Net.IPAddress)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
            <param name="receiver">The Receiver.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.IReceiver.BeginReceive">
            <summary>
                Receives a package.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IClient.Connect(System.Net.IPAddress)">
            <summary>
                Connects to the local server.
            </summary>
            <param name="ip">The Serverip.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IClient.Disconnect">
            <summary>
                Disconnect from the local server.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IClient.Subscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IClient.Subscribe(Sharpex2D.Framework.Network.Logic.IClientListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IClient.Unsubscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IClient.Unsubscribe(Sharpex2D.Framework.Network.Logic.IClientListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Send(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Send(Sharpex2D.Framework.Network.Packages.IBasePackage,System.Net.IPAddress)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
            <param name="receiver">The Receiver.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.BeginReceive">
            <summary>
                Receives a package.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Connect(System.Net.IPAddress)">
            <summary>
                Connects to the local server.
            </summary>
            <param name="ip">The Serverip.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Disconnect">
            <summary>
                Disconnect from the local server.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Subscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Subscribe(Sharpex2D.Framework.Network.Logic.IClientListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Unsubscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Unsubscribe(Sharpex2D.Framework.Network.Logic.IClientListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.#ctor">
            <summary>
                Initializes a new UdpClient class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.InternalBeginReceive">
            <summary>
                Receives data.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.GetPackageSubscriber(System.Type)">
            <summary>
                Gets a list of all matching package listeners.
            </summary>
            <param name="type">The Type.</param>
            <returns>List of package listeners</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpClient.Idle">
            <summary>
                Idles the thread.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.IConnection.Latency">
            <summary>
                Sets or gets the Latency.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.IConnection.IPAddress">
            <summary>
                Sets or gets the IPAddress.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.IConnection.Connected">
            <summary>
                A value indicating whether the connection is still available.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnection.#ctor(System.Net.IPAddress)">
            <summary>
                Initializes a new UdpConnection class.
            </summary>
            <param name="ipAddress">The IPAddress.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnection.Latency">
            <summary>
                Sets or gets the Latency.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnection.IPAddress">
            <summary>
                Sets or gets the IPAddress.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnection.Connected">
            <summary>
                A value indicating whether the connection is still available.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnectionManager.#ctor">
            <summary>
                Initializes a new UdpConnectionManager class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnectionManager.AddPingRequest(Sharpex2D.Framework.Network.Protocols.Udp.UdpPingRequest)">
            <summary>
                Adds a PingRequest to check.
            </summary>
            <param name="pingRequest"></param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnectionManager.RemoveByIP(System.Net.IPAddress)">
            <summary>
                Removes a PingRequest by ip.
            </summary>
            <param name="ipAddress">The IPAddress.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnectionManager.Start">
            <summary>
                Starts checking.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnectionManager.Stop">
            <summary>
                Stops checking.
            </summary>
        </member>
        <member name="E:Sharpex2D.Framework.Network.Protocols.Udp.UdpConnectionManager.PingTimedOut">
            <summary>
                Called if a PingRequest timed out.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpPingRequest.#ctor(System.Net.IPAddress,System.DateTime)">
            <summary>
                Initializes a new UdpPingRequest class.
            </summary>
            <param name="ipAddress">The IPAddress.</param>
            <param name="timestamp">The Timestamp.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpPingRequest.IP">
            <summary>
                Gets the IPAddress.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpPingRequest.Timestamp">
            <summary>
                Gets the Timestamp.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IServer.Subscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.IServer.Unsubscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.IServer.IsActive">
            <summary>
                A value indicating whether the server is active.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Send(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Send(Sharpex2D.Framework.Network.Packages.IBasePackage,System.Net.IPAddress)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
            <param name="receiver">The Receiver.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Subscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Unsubscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.#ctor">
            <summary>
                Initializes a new UdpServer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer._connectionManager_PingTimedOut(System.Object,System.Net.IPAddress)">
            <summary>
                Called if a PingRequest timed out.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.BeginAcceptConnections">
            <summary>
                Accepts clients if available.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.HandlePackage(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Handles the given package.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.SetLatency(Sharpex2D.Framework.Network.Packages.System.PingPackage)">
            <summary>
                Sets the latency of a connection.
            </summary>
            <param name="pingPackage">The PingPackage.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.GetConnection(System.Net.IPAddress)">
            <summary>
                Gets the UpdConnection by the specified IPAddress.
            </summary>
            <param name="ipAddress">The IPAddress.</param>
            <returns>UpdConnection</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.PingRequestLoop">
            <summary>
                Sending a ping request every 30 seconds to all clients.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.SendNotificationPackage(Sharpex2D.Framework.Network.Packages.System.NotificationMode,Sharpex2D.Framework.Network.IConnection[])">
            <summary>
                Sends a NotificationPackage to all clients.
            </summary>
            <param name="mode">The Mode.</param>
            <param name="connections">The ConnectionParams.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Idle">
            <summary>
                Idles the thread.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.GetPackageSubscriber(System.Type)">
            <summary>
                Gets a list of all matching package listeners.
            </summary>
            <param name="type">The Type.</param>
            <returns>List of package listeners</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.Close">
            <summary>
                Closes the server.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.IsActive">
            <summary>
                A value indicating whether the server is active.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Udp.UdpServer.TimeOutLatency">
            <summary>
                Sets or gets the TimeOutLatency, if a client latency is higher than this value, the client is going to be
                disconnected.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.SerializableConnection.#ctor(System.Net.IPAddress,System.Single,System.Boolean)">
            <summary>
                Initializes a new SerializableConnection class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.SerializableConnection.FromIConnection(Sharpex2D.Framework.Network.IConnection)">
            <summary>
                Creates a SerializableConnection from IConnection.
            </summary>
            <param name="connection">The Connection.</param>
            <returns>SerializableConnection</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.SerializableConnection.FromIConnection(Sharpex2D.Framework.Network.IConnection[])">
            <summary>
                Converts an IConnection array into SerialiableConnection array.
            </summary>
            <param name="connections">The Connections.</param>
            <returns>SerializableConnections</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Network.SerializableConnection.Latency">
            <summary>
                Sets or gets the Latency.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.SerializableConnection.IPAddress">
            <summary>
                Sets or gets the IPAddress.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.SerializableConnection.Connected">
            <summary>
                A value indicating whether the connection is still available.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Events.PackageReceiveExceptionEvent.#ctor(System.String)">
            <summary>
                Initializes a new PackageReceiveExceptionEvent class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Events.PackageReceiveExceptionEvent.Message">
            <summary>
                Gets the exception message.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Events.PackageSentExceptionEvent.#ctor(System.String)">
            <summary>
                Initializes a new PackageSentExceptionEvent class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Events.PackageSentExceptionEvent.Message">
            <summary>
                Gets the exception message.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Events.SocketExceptionEvent.#ctor(System.String)">
            <summary>
                Initializes a new SocketExceptionEvent class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Events.SocketExceptionEvent.Message">
            <summary>
                Gets the exception message.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Events.UnknownPackageExceptionEvent.#ctor">
            <summary>
                Initializes a new UnknownPackageExceptionEvent class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Events.UnknownPackageExceptionEvent.#ctor(System.String)">
            <summary>
                Initializes a new UnknownPackageExceptionEvent class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Events.UnknownPackageExceptionEvent.Message">
            <summary>
                Gets the event message.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Logic.IPackageListener.OnPackageReceived(Sharpex2D.Framework.Network.Packages.BinaryPackage)">
            <summary>
                Called if a package is received.
            </summary>
            <param name="binaryPackage">The BinaryPackage.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Logic.IPackageListener.ListenerType">
            <summary>
                Gets the ListenerType.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.BinaryPackage.#ctor">
            <summary>
                Initializes a new BinaryPackage class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.BinaryPackage.Create``1(``0)">
            <summary>
                Creates a BinaryPackage.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="obj">The Object.</param>
            <returns>BinaryPackage</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.PackageSerializer.#cctor">
            <summary>
                Initializes a new PackageSerializer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.PackageSerializer.Serialize(Sharpex2D.Framework.Network.Packages.IBasePackage,System.IO.Stream)">
            <summary>
                Serializes the package in the given stream.
            </summary>
            <param name="package">The Package.</param>
            <param name="targetStream">The TargetStream</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.PackageSerializer.Deserialize(System.IO.Stream)">
            <summary>
                Deserializes a package from the given stream.
            </summary>
            <param name="stream">The Stream.</param>
            <returns>Package</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.System.NotificationPackage.#ctor(Sharpex2D.Framework.Network.IConnection[])">
            <summary>
                Initializes a new NotificationPackage class.
            </summary>
            <param name="connection">The Connection.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.System.NotificationPackage.#ctor(Sharpex2D.Framework.Network.IConnection[],Sharpex2D.Framework.Network.Packages.System.NotificationMode)">
            <summary>
                Initializes a new NotificationPackage class.
            </summary>
            <param name="connection">The Connection.</param>
            <param name="mode">The NotificationMode.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.System.NotificationPackage.Mode">
            <summary>
                Sets or gets the NotificationMode.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.System.NotificationPackage.Connection">
            <summary>
                Gets the corresponding connection.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Packages.System.PingPackage.#ctor">
            <summary>
                Initializes a new PingPackage class.
            </summary>
            <remarks>
                We use our PC-Time to determine the creation of the package. The clients sends the same package back
                and we calculate the time differences.
            </remarks>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Packages.System.PingPackage.TimeStamp">
            <summary>
                Gets the sending time of the PingPackage.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Send(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Send(Sharpex2D.Framework.Network.Packages.IBasePackage,System.Net.IPAddress)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
            <param name="receiver">The Receiver.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.BeginReceive">
            <summary>
                Receives a package.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Connect(System.Net.IPAddress)">
            <summary>
                Connects to the local server.
            </summary>
            <param name="ip">The Serverip.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Disconnect">
            <summary>
                Disconnect from the local server.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Subscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Subscribe(Sharpex2D.Framework.Network.Logic.IClientListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Unsubscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Unsubscribe(Sharpex2D.Framework.Network.Logic.IClientListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.#ctor">
            <summary>
                Initializes a new LocalClient class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.GetPackageSubscriber(System.Type)">
            <summary>
                Gets a list of all matching package listeners.
            </summary>
            <param name="type">The Type.</param>
            <returns>List of package listeners</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.InternalBeginReceive">
            <summary>
                Starts receiving data.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Idle">
            <summary>
                Idles the thread.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Local.LocalClient.Connected">
            <summary>
                A value indicating whether the client is connected.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalConnection.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
                Initializes a new LocalConnection class.
            </summary>
            <param name="tcpClient">The Client.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Local.LocalConnection.Latency">
            <summary>
                Sets or gets the Latency.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Local.LocalConnection.IPAddress">
            <summary>
                Sets or gets the IPAddress.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Local.LocalConnection.Connected">
            <summary>
                A value indicating whether the connection is still available.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.Send(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.Send(Sharpex2D.Framework.Network.Packages.IBasePackage,System.Net.IPAddress)">
            <summary>
                Sends a package to the given receivers.
            </summary>
            <param name="package">The Package.</param>
            <param name="receiver">The Receiver.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.Subscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Subscribes to a Client.
            </summary>
            <param name="subscriber">The Subscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.Unsubscribe(Sharpex2D.Framework.Network.Logic.IPackageListener)">
            <summary>
                Unsubscribes from a Client.
            </summary>
            <param name="unsubscriber">The Unsubscriber.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.#ctor">
            <summary>
                Initializes a new LocalServer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.BeginAcceptConnections">
            <summary>
                Accepts clients if available.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.HandleClient(System.Object)">
            <summary>
                Handles a connection.
            </summary>
            <param name="objConnection">The Connection.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.SetLatency(Sharpex2D.Framework.Network.Packages.System.PingPackage)">
            <summary>
                Sets the latency of a connection.
            </summary>
            <param name="pingPackage">The PingPackage.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.GetConnection(System.Net.IPAddress)">
            <summary>
                Gets the connection.
            </summary>
            <param name="address">The IPAddress.</param>
            <returns>LocalConnection</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.SendToAllClients(Sharpex2D.Framework.Network.Packages.IBasePackage)">
            <summary>
                Sends a package to all clients.
            </summary>
            <param name="package">The Package.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.SendTo(Sharpex2D.Framework.Network.Packages.IBasePackage,System.Net.IPAddress)">
            <summary>
                Sends a package to a specified client.
            </summary>
            <param name="package">The Package.</param>
            <param name="connection">The Connection</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.PingRequestLoop">
            <summary>
                Sending a ping request every 30 seconds to all clients.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.SendNotificationPackage(Sharpex2D.Framework.Network.Packages.System.NotificationMode,Sharpex2D.Framework.Network.IConnection[])">
            <summary>
                Sends a NotificationPackage to all clients.
            </summary>
            <param name="mode">The Mode.</param>
            <param name="connections">The ConnectionParams.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.Idle">
            <summary>
                Idles the thread.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.Close">
            <summary>
                Closes the server.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.GetPackageSubscriber(System.Type)">
            <summary>
                Gets a list of all matching package listeners.
            </summary>
            <param name="type">The Type.</param>
            <returns>List of package listeners</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.IsActive">
            <summary>
                A value indicating whether the server is active.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Network.Protocols.Local.LocalServer.TimeOutLatency">
            <summary>
                Sets or gets the TimeOutLatency, if a client latency is higher than this value, the client is going to be
                disconnected.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.IsIntersecting(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Indicates whether the particles intersect with each other.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.#ctor">
            <summary>
                Initializes a new CollisionManager class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.Finalize">
            <summary>
                Destructor.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.InternalIsIntersecting(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Indicates whether the particles intersect with each other.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.RectangleIntersectsRectangle(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Indicates whether the rectangle intersects with another rectangle.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>True on intersecting</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.RectangleIntersectsCircle(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Indicates whether the rectangle intersects with a circle.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>True on intersecting</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionManager.CircleIntersectsCircle(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Indicates whether the circle intersects with a circle.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>True on intersecting</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Collision.CollisionManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.CollisionReference.#ctor(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Initializes a new CollisionReference class.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Collision.CollisionReference.C1">
            <summary>
                Gets the first Particle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Collision.CollisionReference.C2">
            <summary>
                Gets the second Particle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.ReferenceProvider.#ctor">
            <summary>
                Initializes a new CollisionReferences class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.ReferenceProvider.AddReference(Sharpex2D.Framework.Physics.Collision.CollisionReference)">
            <summary>
                Adds a new CollisionReference to the ReferenceProvider.
            </summary>
            <param name="reference">The Reference.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.ReferenceProvider.ClearReferences">
            <summary>
                Clears the current References, this should be called at the end of an update.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.ReferenceProvider.IsProcessed(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Indicates whether the particle collision is already processed.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>True if processed</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Collision.PenetrationParams.InvolvedParticles">
            <summary>
                Gets the Involved Particles.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Collision.PenetrationParams.InnerEnergy">
            <summary>
                Gets the InnerEnergy.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Collision.RecoilParams.InvolvedParticles">
            <summary>
                Gets the Involved Particles.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.UnknownShapeException.#ctor">
            <summary>
                Initializes a new UnknownShapeException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.UnknownShapeException.#ctor(System.String)">
            <summary>
                Initializes a new UnknownShapeException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.UnknownShapeException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new UnknownShapeException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Collision.UnknownShapeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new UnknownShapeException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.IPhysicProvider.Subscribe(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Subscribes a particle to the current PhysicProvider class.
            </summary>
            <param name="particle">The Particle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.IPhysicProvider.Unsubscribe(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Unsubscribes a particle from the current PhysicProvider class.
            </summary>
            <param name="particle">The Particle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.IPhysicProvider.AddParticleVelocity(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Adds the velocity to the particle.
            </summary>
            <param name="particle">The Particle.</param>
            <param name="velocity">The Velocity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.IPhysicProvider.SetParticleVelocity(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Sets the velocity of the particle.
            </summary>
            <param name="particle">The Particle.</param>
            <param name="velocity">The Velocity.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.IPhysicProvider.LowerBound">
            <summary>
                Sets or gets the lower bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.IPhysicProvider.UpperBound">
            <summary>
                Sets or gets the upper bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.IPhysicProvider.BoundLeft">
            <summary>
                Sets or gets the left bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.IPhysicProvider.BoundRight">
            <summary>
                Sets or gets the right bound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Particle.#ctor">
            <summary>
                Initializes a new Particle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Particle.#ctor(Sharpex2D.Framework.Physics.IPhysicProvider)">
            <summary>
                Initializes a new Particle.
            </summary>
            <param name="physicProvider">The PhysicProvider.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Particle.OnPenetration(Sharpex2D.Framework.Physics.Collision.PenetrationParams)">
            <summary>
                Called after a non-elastic impact.
            </summary>
            <param name="penetration">The PenetrationParams.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Particle.OnRecoil(Sharpex2D.Framework.Physics.Collision.RecoilParams)">
            <summary>
                Called after an elastic impact.
            </summary>
            <param name="recoil">The RecoilParams.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.Shape">
            <summary>
                Gets or sets the type of the shape.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.Mass">
            <summary>
                Sets or gets the mass of the object.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.Elasticity">
            <summary>
                Sets or gets the elasticity of the object.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.Velocity">
            <summary>
                Sets or gets the velocity of the object.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.Damping">
            <summary>
                Sets or gets the damping value of the object.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.Gravity">
            <summary>
                Sets or gets whether gravity should be used.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Particle.PhysicProvider">
            <summary>
                Gets the linked PhysicProvider.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicalConstants.Gravitation">
            <summary>
                Gets the gravityconstant.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicalConstants.VelocityOfLight">
            <summary>
                Gets the velocity of light in m/s.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.Construct">
            <summary>
                Constructs the Component
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.Subscribe(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Subscribes a particle to the current PhysicProvider class.
            </summary>
            <param name="particle">The Particle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.Unsubscribe(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Unsubscribes a particle from the current PhysicProvider class.
            </summary>
            <param name="particle">The Particle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.AddParticleVelocity(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Sets the velocity of the particle.
            </summary>
            <param name="particle">The Particle.</param>
            <param name="velocity">The Velocity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.SetParticleVelocity(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Sets the velocity of the particle.
            </summary>
            <param name="particle">The Particle.</param>
            <param name="velocity">The Velocity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.#ctor">
            <summary>
                Initializes a new PhysicProvider class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.UpdateParticles(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the given particle.
            </summary>
            <param name="particle">The Particle.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.VelocityOfFall(System.Single)">
            <summary>
                Gets the velocity of fall of the object.
            </summary>
            <param name="elapsed">The Elapsed.</param>
            <returns>Velocity in meter per second</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.ParticleDamping(Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Returns the damped velocity of the object.
            </summary>
            <param name="velocity">The Velocity.</param>
            <param name="damping">The Damping.</param>
            <returns>Damped Velocity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.DampOnImpact(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Damps the particle on impact.
            </summary>
            <param name="originVelocity">The Velocity.</param>
            <returns>Damped Velocity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.ElasticImpact(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the new velocity of two particles after an elastic impact.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>Velocity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.NonElasticImpact(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the new velocity after a non elastic impact.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>Velocity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.Ekin(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the kinetic energy of the given particle.
            </summary>
            <param name="particle">The Particle.</param>
            <returns>Ekin</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.GetEkin(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the kinetic energy of the given particle.
            </summary>
            <param name="particle">The Particle.</param>
            <returns>Ekin</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.GetVelocityOfFall(System.Single)">
            <summary>
                Gets the velocity of fall of the object.
            </summary>
            <param name="elapsed">The Elapsed.</param>
            <returns>Velocity in meter per second</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.DampParticle(Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the damped velocity of the object.
            </summary>
            <param name="particle">The Particle.</param>
            <returns>Damped Velocity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.GetElasticImpactValues(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the new velocity of two particles after an elastic impact.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>Velocity</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.PhysicProvider.GetNonElasticImpactValues(Sharpex2D.Framework.Physics.Particle,Sharpex2D.Framework.Physics.Particle)">
            <summary>
                Returns the new velocity after a non elastic impact.
            </summary>
            <param name="particle1">The first Particle.</param>
            <param name="particle2">The second Particle.</param>
            <returns>Velocity</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.LowerBound">
            <summary>
                Sets or gets the lower bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.UpperBound">
            <summary>
                Sets or gets the upper bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.BoundLeft">
            <summary>
                Sets or gets the left bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.BoundRight">
            <summary>
                Sets or gets the right bound.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.EnableGravity">
            <summary>
                Indicating whether the gravity should be emulated.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.Gravity">
            <summary>
                Sets or gets the custom gravity.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.PhysicProvider.CollisionManager">
            <summary>
                Gets the current CollisionManager.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Shapes.Circle.#ctor">
            <summary>
                Initializes a new Circle class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Shapes.Circle.#ctor(System.Single)">
            <summary>
                Initializes a new Circle class.
            </summary>
            <param name="radius">The Radius.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Shapes.Circle.Radius">
            <summary>
                Sets or gets the radius of the circle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Shapes.Rectangle.#ctor">
            <summary>
                Initializes a new Rectangle class.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Shapes.Rectangle.Width">
            <summary>
                Sets or gets the width of the rectangle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Shapes.Rectangle.Height">
            <summary>
                Sets or gets the height of the rectangle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginCatalog`1.#ctor">
            <summary>
                Initializes a new PluginCatalog class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginCatalog`1.#ctor(System.String)">
            <summary>
                Initializes a new PluginCatalog class.
            </summary>
            <param name="workingDirectory">The WorkingDirectory.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginCatalog`1.Compose">
            <summary>
                Compose the plugins.
            </summary>
            <returns>PluginContainer with type T.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Plugin.PluginCatalog`1.WorkingDirectory">
            <summary>
                Sets or gets the WorkingDirectory.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginContainer`1.#ctor">
            <summary>
                Initializes a new PluginContainer class.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Plugin.PluginContainer`1.Description">
            <summary>
                Sets or gets the Description.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Plugin.PluginContainer`1.Guid">
            <summary>
                Sets or gets the Guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginActivator.CreateInstance``1(System.String)">
            <summary>
                Loads a plugin into SGL.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <param name="path">The Path.</param>
            <returns>T</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Plugin.PluginActivator.Guid">
            <summary>
                Gets the guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Physics.Shapes.TextureBasedCircle.#ctor(Sharpex2D.Framework.Rendering.Texture2D)">
            <summary>
                Initializes a new TextureBasedCircle class.
            </summary>
            <param name="texture">The underlying Texture.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Physics.Shapes.TextureBasedCircle.Texture">
            <summary>
                Gets the Texture.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.SpriteSheet.#ctor(Sharpex2D.Framework.Rendering.Texture2D)">
            <summary>
                Initializes a new SpriteSheet class.
            </summary>
            <param name="texture2D">The Texture2D.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.SpriteSheet.Texture2D">
            <summary>
                Gets the Texture2D.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.SpriteSheet.Rectangle">
            <summary>
                Gets the Rectangle.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.#ctor(Sharpex2D.Framework.Rendering.Texture2D)">
            <summary>
                Initializes a new AnimatedSpriteSheet class.
            </summary>
            <param name="texture2D">The Texture2D.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.Add(Sharpex2D.Framework.Rendering.Keyframe)">
            <summary>
                Adds a new Keyframe.
            </summary>
            <param name="keyframe">The Keyframe.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.Remove(Sharpex2D.Framework.Rendering.Keyframe)">
            <summary>
                Removes a Keyframe.
            </summary>
            <param name="keyframe">The Keyframe.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.RemoveAt(System.Int32)">
            <summary>
                Removes a Keyframe at a specific index.
            </summary>
            <param name="index">The Index.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.ActivateKeyframe(System.Int32)">
            <summary>
                Activates a Keyframe.
            </summary>
            <param name="index">The Index.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.CurrentKeyframe">
            <summary>
                Gets the current Keyframe.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.AnimatedSpriteSheet.AutoUpdate">
            <summary>
                A value indicating whether the AnimatedSpriteSheet should update automatically.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.DeviceAttribute.#ctor(System.String)">
            <summary>
                Initializes a new DeviceAttribute class.
            </summary>
            <param name="friendlyName">The FriendlyName.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.#ctor(Sharpex2D.Framework.Rendering.Devices.ResourceManager,System.Guid)">
            <summary>
                Initializes a new RenderDevice class.
            </summary>
            <param name="guid">The Guid.</param>
            <param name="resourceManager">The ResourceManager.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.InitializeDevice">
            <summary>
                Initializes the Device.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.Begin">
            <summary>
                Begins the draw operation.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.End">
            <summary>
                Ends the draw operation.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawString(System.String,Sharpex2D.Framework.Rendering.Fonts.Font,Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Draws a string.
            </summary>
            <param name="text">The Text.</param>
            <param name="font">The Font.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawString(System.String,Sharpex2D.Framework.Rendering.Fonts.Font,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Draws a string.
            </summary>
            <param name="text">The Text.</param>
            <param name="font">The Font.</param>
            <param name="position">The Position.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.Texture2D,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="texture">The Texture.</param>
            <param name="position">The Position.</param>
            <param name="opacity">The Opacity.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.Texture2D,Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="texture">The Texture.</param>
            <param name="position">The Position.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.Texture2D,Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="texture">The Texture.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="opacity">The Opacity.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.Texture2D,Sharpex2D.Framework.Math.Rectangle,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="texture">The Texture.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.SpriteSheet,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="spriteSheet">The SpriteSheet.</param>
            <param name="position">The Position.</param>
            <param name="color">The Color.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.SpriteSheet,Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="spriteSheet">The SpriteSheet.</param>
            <param name="position">The Position.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.SpriteSheet,Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="spriteSheet">The SpriteSheet.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="color">The Color.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.SpriteSheet,Sharpex2D.Framework.Math.Rectangle,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="spriteSheet">The SpriteSheet.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.MeasureString(System.String,Sharpex2D.Framework.Rendering.Fonts.Font)">
            <summary>
                Measures the string.
            </summary>
            <param name="text">The String.</param>
            <param name="font">The Font.</param>
            <returns>Vector2.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.SetTransform(Sharpex2D.Framework.Math.Matrix2x3)">
            <summary>
                Sets the Transform.
            </summary>
            <param name="matrix">The Matrix.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.ResetTransform">
            <summary>
                Resets the Transform.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawRectangle(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Draws a Rectangle.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="rectangle">The Rectangle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawLine(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Draws a Line between two points.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="start">The Startpoint.</param>
            <param name="target">The Targetpoint.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawEllipse(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Ellipse)">
            <summary>
                Draws a Ellipse.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="ellipse">The Ellipse.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawArc(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Rectangle,System.Single,System.Single)">
            <summary>
                Draws an Arc.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="startAngle">The StartAngle.</param>
            <param name="sweepAngle">The SweepAngle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.DrawPolygon(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Draws a Polygon.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="polygon">The Polygon.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.FillRectangle(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Fills a Rectangle.
            </summary>
            <param name="color">The Color.</param>
            <param name="rectangle">The Rectangle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.FillEllipse(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Math.Ellipse)">
            <summary>
                Fills a Ellipse.
            </summary>
            <param name="color">The Color.</param>
            <param name="ellipse">The Ellipse.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDevice.FillPolygon(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Fills a Polygon.
            </summary>
            <param name="color">The Color.</param>
            <param name="polygon">The Polygon.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.RenderDevice.PlatformVersion">
            <summary>
                Gets the required PlatformVersion.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.RenderDevice.IsPlatformSupported">
            <summary>
                A value indicating whether the current platform is supported.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.RenderDevice.ContentProcessors">
            <summary>
                Gets the ContentProcessors.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.RenderDevice.GraphicsDevice">
            <summary>
                Gets or sets the GraphicsDevice.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.RenderDevice.ResourceManager">
            <summary>
                Gets the ResourceManager.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.RenderDevice.Guid">
            <summary>
                Gets the Guid.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDeviceException.#ctor">
            <summary>
                Initializes a new RenderDeviceException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDeviceException.#ctor(System.String)">
            <summary>
                Initializes a new RenderDeviceException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDeviceException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new RenderDeviceException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.RenderDeviceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new RenderDeviceException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.ResourceManager.CreateResource(Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Creates a new Resource.
            </summary>
            <param name="color">The Color.</param>
            <param name="width">The Width.</param>
            <returns>IPen.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.ResourceManager.CreateResource(Sharpex2D.Framework.Rendering.Fonts.Typeface)">
            <summary>
                Creates a new Resource.
            </summary>
            <param name="typeface">The Typeface.</param>
            <returns>IFont.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.DeviceSelector.#cctor">
            <summary>
                Initializes a new DeviceSelector class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Devices.DeviceSelector.Select(Sharpex2D.Framework.Rendering.Devices.RenderDevice[],Sharpex2D.Framework.Rendering.Devices.DeviceSelector.SelectorMode,System.Boolean)">
            <summary>
                Gets the renderer based on the SelectorMode.
            </summary>
            <param name="devices">The RenderDevice Collection.</param>
            <param name="mode">The SelectorMode.</param>
            <param name="useSoftwarefallback">If no RenderDevice is available use a software renderer.</param>
            <returns>IRenderer.</returns>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Devices.DeviceSelector.SelectorMode.Lowest">
            <summary>
                Selects the device with the lowest possible requirements.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Devices.DeviceSelector.SelectorMode.Highest">
            <summary>
                Selects the device with the highest possible requirements.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Devices.DeviceSelector.SelectorMode.Generic">
            <summary>
                Selects the first capable device.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Devices.IDeviceResource.DebugName">
            <summary>
                Gets or sets the DebugName.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Fonts.Font.#ctor(Sharpex2D.Framework.Rendering.Fonts.Typeface)">
            <summary>
                Initializes a new Font class.
            </summary>
            <param name="typeface">The Typeface.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Fonts.Font.#ctor(System.String,System.Single,Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle)">
            <summary>
                Initializes a new Font class.
            </summary>
            <param name="familyName">The FamilyName.</param>
            <param name="size">The Size.</param>
            <param name="style">The Style.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Font.DebugName">
            <summary>
                Gets or sets the DebugName.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Font.Instance">
            <summary>
                Gets the Instance.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Font.Type">
            <summary>
                Gets the Type.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Font.Typeface">
            <summary>
                Gets the Typeface.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.IFont.Typeface">
            <summary>
                Sets or gets the Typeface.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIHelper.ConvertColor(Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Converts the Color.
            </summary>
            <param name="color">The Color.</param>
            <returns>GDI Color.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIHelper.ConvertPoint(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Converts the Point.
            </summary>
            <param name="vector">The Vector2.</param>
            <returns>Point.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIHelper.ConvertPointF(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Converts the PointF.
            </summary>
            <param name="vector">The Vector2.</param>
            <returns>PointF.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIHelper.ConvertRectangle(Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Converts the Rectangle.
            </summary>
            <param name="rectangle">The Rectangle.</param>
            <returns>Rectangle.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIHelper.ConvertRectangleF(Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Converts the RectangleF.
            </summary>
            <param name="rectangle">The Rectangle.</param>
            <returns>RectangleF.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.#ctor(Sharpex2D.Framework.Rendering.InterpolationMode,Sharpex2D.Framework.Rendering.SmoothingMode)">
            <summary>
                Initializes a new GDIRenderDevice class.
            </summary>
            <param name="interpolationMode">The InterpolationMode.</param>
            <param name="smoothingMode">The SmoothingMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.#ctor">
            <summary>
                Initializes a new GDIRenderDevice class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.InitializeDevice">
            <summary>
                Initializes the Device.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.Begin">
            <summary>
                Begins the draw operation.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.End">
            <summary>
                Ends the draw operation.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawString(System.String,Sharpex2D.Framework.Rendering.Fonts.Font,Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Draws a string.
            </summary>
            <param name="text">The Text.</param>
            <param name="font">The Font.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawString(System.String,Sharpex2D.Framework.Rendering.Fonts.Font,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Draws a string.
            </summary>
            <param name="text">The Text.</param>
            <param name="font">The Font.</param>
            <param name="position">The Position.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.Texture2D,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="texture">The Texture.</param>
            <param name="position">The Position.</param>
            <param name="opacity">The Opacity.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.Texture2D,Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="texture">The Texture.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="opacity">The Opacity.</param>
            <param name="color">The Color.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.SpriteSheet,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="spriteSheet">The SpriteSheet.</param>
            <param name="position">The Position.</param>
            <param name="color">The Color.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawTexture(Sharpex2D.Framework.Rendering.SpriteSheet,Sharpex2D.Framework.Math.Rectangle,Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Draws a Texture.
            </summary>
            <param name="spriteSheet">The SpriteSheet.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="color">The Color.</param>
            <param name="opacity">The Opacity.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.MeasureString(System.String,Sharpex2D.Framework.Rendering.Fonts.Font)">
            <summary>
                Measures the string.
            </summary>
            <param name="text">The String.</param>
            <param name="font">The Font.</param>
            <returns>Vector2.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.SetTransform(Sharpex2D.Framework.Math.Matrix2x3)">
            <summary>
                Sets the Transform.
            </summary>
            <param name="matrix">The Matrix.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.ResetTransform">
            <summary>
                Resets the Transform.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawRectangle(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Draws a Rectangle.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="rectangle">The Rectangle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawLine(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Draws a Line between two points.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="start">The Startpoint.</param>
            <param name="target">The Targetpoint.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawEllipse(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Ellipse)">
            <summary>
                Draws a Ellipse.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="ellipse">The Ellipse.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawArc(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Rectangle,System.Single,System.Single)">
            <summary>
                Draws an Arc.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="rectangle">The Rectangle.</param>
            <param name="startAngle">The StartAngle.</param>
            <param name="sweepAngle">The SweepAngle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.DrawPolygon(Sharpex2D.Framework.Rendering.Pen,Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Draws a Polygon.
            </summary>
            <param name="pen">The Pen.</param>
            <param name="polygon">The Polygon.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.FillRectangle(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Math.Rectangle)">
            <summary>
                Fills a Rectangle.
            </summary>
            <param name="color">The Color.</param>
            <param name="rectangle">The Rectangle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.FillEllipse(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Math.Ellipse)">
            <summary>
                Fills a Ellipse.
            </summary>
            <param name="color">The Color.</param>
            <param name="ellipse">The Ellipse.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.FillPolygon(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Math.Polygon)">
            <summary>
                Fills a Polygon.
            </summary>
            <param name="color">The Color.</param>
            <param name="polygon">The Polygon.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.Present">
            <summary>
                Presents the Frame.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.ColorTint(System.Drawing.Bitmap,System.Single,System.Single,System.Single)">
            <summary>
                Tints the Bitmap.
            </summary>
            <param name="sourceBitmap">The SourceBitmap.</param>
            <param name="blueTint">The BlueTint.</param>
            <param name="greenTint">The GreenTint.</param>
            <param name="redTint">The RedTint.</param>
            <returns>The Bitmap.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.PlatformVersion">
            <summary>
                Gets the required PlatformVersion.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDIRenderDevice.ContentProcessors">
            <summary>
                Gets the ContentProcessors.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIResourceManager.CreateResource(Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Creates a new Resource.
            </summary>
            <param name="color">The Color.</param>
            <param name="width">The Width.</param>
            <returns>IPen.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIResourceManager.CreateResource(Sharpex2D.Framework.Rendering.Fonts.Typeface)">
            <summary>
                Creates a new Resource.
            </summary>
            <param name="typeface">The Typeface.</param>
            <returns>IFont.</returns>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.InterpolationMode.NearestNeighbor">
            <summary>
                NearestNeighbor.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.InterpolationMode.Linear">
            <summary>
                Linear.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Fonts.Typeface.#ctor">
            <summary>
                Initializes a new Typeface class.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Typeface.FamilyName">
            <summary>
                Sets or gets the FontFamily.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Typeface.Size">
            <summary>
                Sets or gets the FontSize.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Fonts.Typeface.Style">
            <summary>
                Sets or gets the FontStyle.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle.Regular">
            <summary>
                Regular font.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle.Underline">
            <summary>
                Underlined font.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle.Italic">
            <summary>
                Italic font.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle.Bold">
            <summary>
                Bold font.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle.Strikeout">
            <summary>
                Strikeout font.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont.#ctor(System.String,System.Single,Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle)">
            <summary>
                Initializes a new GdiFont class.
            </summary>
            <param name="familyName">The FamilyName.</param>
            <param name="size">The Size.</param>
            <param name="style">The Style.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont.#ctor(Sharpex2D.Framework.Rendering.Fonts.Typeface)">
            <summary>
                Initializes a new GdiFont class.
            </summary>
            <param name="typeface">The Typeface.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont.GetFont">
            <summary>
                Gets the Font.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont.GetFont(Sharpex2D.Framework.Rendering.Fonts.Typeface)">
            <summary>
                Gets the Font.
            </summary>
            <param name="typeface">The Typeface.</param>
            <returns>Font</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont.GetFontStyle(Sharpex2D.Framework.Rendering.Fonts.TypefaceStyle)">
            <summary>
                Gets the FontStyle.
            </summary>
            <param name="style">The TypefaceStyle.</param>
            <returns>FontStyle</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.Fonts.GDIFont.Typeface">
            <summary>
                Sets or gets the Typeface.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.IPen.Width">
            <summary>
                Sets or gets the Size of the Pen.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.IPen.Color">
            <summary>
                Sets or gets the Color of the Pen.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIPen.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIPen.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIPen.#ctor">
            <summary>
                Initializes a new GdiPen class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIPen.#ctor(Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Initializes a new GdiPen class.
            </summary>
            <param name="color">The Color.</param>
            <param name="width">The Width.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDIPen.GetPen">
            <summary>
                Gets the Pen.
            </summary>
            <returns>Pen</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDIPen.Width">
            <summary>
                Sets or gets the Size of the Pen.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDIPen.Color">
            <summary>
                Sets or gets the Color of the Pen.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Texture2D.DebugName">
            <summary>
                Gets or sets the DebugName.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Texture2D.Width">
            <summary>
                Gets the Width.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Texture2D.Height">
            <summary>
                Gets the Height.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GDI.GDITexture.#ctor(System.Drawing.Bitmap)">
            <summary>
                Initializes a new GdiTexture class.
            </summary>
            <param name="bitmap">The Bitmap.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDITexture.Width">
            <summary>
                Gets the Width.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDITexture.Height">
            <summary>
                Gets the Height.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GDI.GDITexture.Bmp">
            <summary>
                Gets the GdiTexture data.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Keyframe.#ctor(Sharpex2D.Framework.Math.Rectangle,System.Single)">
            <summary>
                Initializes a new Keyframe class.
            </summary>
            <param name="displayRectangle">The DisplayRectangle.</param>
            <param name="duration">The Duration.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Keyframe.DisplayRectangle">
            <summary>
                Gets the DisplayRectangle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Keyframe.Duration">
            <summary>
                Gets the Duration.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Pen.#ctor(Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Initializes a new Pen class.
            </summary>
            <param name="color">The Color.</param>
            <param name="width">The Width.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Pen.DebugName">
            <summary>
                Gets or sets the DebugName.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Pen.Instance">
            <summary>
                Gets the Instance.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Pen.Type">
            <summary>
                Gets the Type.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Pen.Color">
            <summary>
                Gets or sets the Color.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Pen.Width">
            <summary>
                Gets or sets the Width.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Events.AfterSceneChangedEvent.#ctor(Sharpex2D.Framework.Rendering.Scene.Scene)">
            <summary>
                Initializes a new AfterSceneChangedEvent class.
            </summary>
            <param name="scene">The Scene.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.Events.AfterSceneChangedEvent.CurrentScene">
            <summary>
                Gets the CurrentScene.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Events.BeforeSceneChangedEvent.#ctor(Sharpex2D.Framework.Rendering.Scene.Scene)">
            <summary>
                Initializes a new BeforeSceneChangedEvent class.
            </summary>
            <param name="scene">The Scene.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.Events.BeforeSceneChangedEvent.CurrentScene">
            <summary>
                Gets the CurrentScene.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Scene.#ctor">
            <summary>
                Initializes the Scene class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Scene.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Scene.Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Render.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Scene.Initialize">
            <summary>
                Initializes the scene.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.Scene.LoadContent(Sharpex2D.Framework.Content.ContentManager)">
            <summary>
                Loads the content.
            </summary>
            <param name="content">The ContentManager.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.Scene.EntityEnvironment">
            <summary>
                Sets or gets the EntityEnvironment.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.Scene.UIManager">
            <summary>
                Sets or gets the UIManager.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.SmoothingMode.None">
            <summary>
                No smoothing.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Rendering.SmoothingMode.AntiAlias">
            <summary>
                AntiAlias.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.Events.ScriptCompletedEvent.#ctor(System.Guid)">
            <summary>
                Initializes a new ScriptCompletedEvent class.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.Events.ScriptCompletedEvent.ScriptGuid">
            <summary>
                Gets the name of the running scrip.t
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.Events.ScriptRunningEvent.#ctor(System.Guid)">
            <summary>
                Initializes a new ScriptRunningEvent class.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.Events.ScriptRunningEvent.ScriptGuid">
            <summary>
                Gets the name of the running scrip.t
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.IScript.Content">
            <summary>
                Sets or gets the ScriptContent.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.IScript.IsActive">
            <summary>
                A value indicating whether the script is active.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.IScript.Guid">
            <summary>
                Gets or sets the guid of the script.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.IScriptEvaluator.Evaluate(Sharpex2D.Framework.Scripting.IScript,System.Object[])">
            <summary>
                Evaluate the script content.
            </summary>
            <param name="script">The Script.</param>
            <param name="objects">The Objects.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptException.#ctor">
            <summary>
                Initializes a new ScriptException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptException.#ctor(System.String)">
            <summary>
                Initializes a new ScriptException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new ScriptException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new ScriptException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptHost.#ctor(Sharpex2D.Framework.Scripting.IScriptEvaluator)">
            <summary>
                Initializes a new ScriptHost class.
            </summary>
            <param name="evaluator">The ScriptEvaluator.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptHost.Execute(Sharpex2D.Framework.Scripting.IScript,System.Object[])">
            <summary>
                Executes the script.
            </summary>
            <param name="script">The Script.</param>
            <param name="objects">The Objects.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptHost.AddMethod(System.String,System.Reflection.MethodInfo)">
            <summary>
                Adds a method to the list.
            </summary>
            <param name="key">The MethodName.</param>
            <param name="methodInfo">The MethodInfo.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptHost.RemoveMethod(System.String)">
            <summary>
                Removes a method from the list.
            </summary>
            <param name="key">The MethodName.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptHost.Invoke(System.String,System.Object[])">
            <summary>
                Invokes a method.
            </summary>
            <param name="key">The MethodName.</param>
            <param name="parameters">The Parameters.</param>
            <returns>Object</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.ScriptHost.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.IScriptEntry.Main(System.Object[])">
            <summary>
                The Main method of the script.
            </summary>
            <param name="objects">The Objects.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.CSharp.CSharpScriptCompiler.#cctor">
            <summary>
                Initializes a new CSharpScriptCompiler class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.CSharp.CSharpScriptCompiler.CompileToAssembly(Sharpex2D.Framework.Scripting.CSharp.CSharpScript)">
            <summary>
                Compiles the source to assembly.
            </summary>
            <param name="script">The SharpScript.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptStorageBuffer.#ctor">
            <summary>
                Initializes a new ScriptStorageBuffer class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptStorageBuffer.Add(System.Guid,System.Reflection.Assembly)">
            <summary>
                Adds a new compiled script to the storage.
            </summary>
            <param name="guid">The Guid.</param>
            <param name="compiledScript">The CompiledScript.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptStorageBuffer.Remove(System.Guid)">
            <summary>
                Removes a compiled script.
            </summary>
            <param name="guid">The Guid.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptStorageBuffer.Update(System.Guid,System.Reflection.Assembly)">
            <summary>
                Updates a already existing compiled script.
            </summary>
            <param name="guid">The Guid.</param>
            <param name="compiledScript">The CompiledScript.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.ScriptStorageBuffer.Exists(System.Guid)">
            <summary>
                A value indicating whether the compiled script exists.
            </summary>
            <param name="guid">The Guid.</param>
            <returns>True if the compiled script is available.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.ScriptStorageBuffer.Item(System.Guid)">
            <summary>
                Sets or gets the CompiledScript.
            </summary>
            <param name="guid">The Guid.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.CSharp.CSharpScript.Content">
            <summary>
                Sets or gets the ScriptContent.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.CSharp.CSharpScript.IsActive">
            <summary>
                A value indicating whether the script is active.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.CSharp.CSharpScript.Guid">
            <summary>
                Gets or sets the guid of the script.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.CSharp.CSharpScriptEvaluator.#ctor">
            <summary>
                Initializes a new SharpScriptEvaluator.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.CSharp.CSharpScriptEvaluator.Evaluate(Sharpex2D.Framework.Scripting.IScript,System.Object[])">
            <summary>
                Evaluate the script content.
            </summary>
            <param name="script">The Script.</param>
            <param name="objects">The Objects.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.CSharp.CSharpScriptEvaluator.Buffering">
            <summary>
                A value indicating whether the compiled scripts gets buffered.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.VB.VBScript.Content">
            <summary>
                Sets or gets the ScriptContent.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.VB.VBScript.IsActive">
            <summary>
                A value indicating whether the script is active.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.VB.VBScript.Guid">
            <summary>
                Gets or sets the guid of the script.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.VB.VBScriptCompiler.#cctor">
            <summary>
                Initializes a new VBScriptCompiler class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.VB.VBScriptCompiler.CompileToAssembly(Sharpex2D.Framework.Scripting.VB.VBScript)">
            <summary>
                Compiles the source to assembly.
            </summary>
            <param name="script">The SharpScript.</param>
            <returns>Assembly.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.VB.VBScriptEvaluator.#ctor">
            <summary>
                Initializes a new SharpScriptEvaluator.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Scripting.VB.VBScriptEvaluator.Evaluate(Sharpex2D.Framework.Scripting.IScript,System.Object[])">
            <summary>
                Evaluate the script content.
            </summary>
            <param name="script">The Script.</param>
            <param name="objects">The Objects.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Scripting.VB.VBScriptEvaluator.Buffering">
            <summary>
                A value indicating whether the compiled scripts gets buffered.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Security.IsolatedAssemblySource`1.#ctor(System.Guid,System.String)">
            <summary>
                Initializes a new IsolatedAssemblySource class.
            </summary>
            <param name="guid">The Guid.</param>
            <param name="assemblyPath">The AssemblyPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Security.IsolatedAssemblySource`1.#ctor(System.String,System.String)">
            <summary>
                Initializes a new IsolatedAssemblySource class.
            </summary>
            <param name="name">The Name.</param>
            <param name="assemblyPath">The AssemblyPath.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Security.IsolatedAssemblySource`1.#ctor(System.String,System.String,System.Security.PermissionSet)">
            <summary>
                Initializes a new IsolatedAssemblySource class.
            </summary>
            <param name="name">The Name.</param>
            <param name="assemblyPath">The AssemblyPath.</param>
            <param name="permSet">The PermissionSet.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Security.IsolatedAssemblySource`1.Dispose">
            <summary>
                Disposes the Object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Security.IsolatedAssemblySource`1.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Common.Security.IsolatedAssemblySource`1.Instance">
            <summary>
                Gets the Instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Common.Security.ProxySource.GetLifetimeService">
            <summary>
                Gets the LifetimeService.
            </summary>
            <returns>ILease object.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow.#ctor(System.IntPtr)">
            <summary>
                Initializes a new GameWindow class.
            </summary>
            <param name="handle">The Handle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow.SetCursorIcon(System.String)">
            <summary>
                Sets the CursorIcon.
            </summary>
            <param name="path">The Path.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow.FixWindow">
            <summary>
                Fixes the size of the window.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow.FreeWindow">
            <summary>
                Frees the window size.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow._surface_Deactivate(System.Object,System.EventArgs)">
            <summary>
                Deactivate Event.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow._surface_Activated(System.Object,System.EventArgs)">
            <summary>
                Activate Event.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.GameWindow._surface_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
                FormClosing Event.
            </summary>
            <param name="sender">The Sender.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.Title">
            <summary>
                Gets or sets the Title.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.Icon">
            <summary>
                Gets or sets the Icon.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.Size">
            <summary>
                Gets or sets the Size.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.Position">
            <summary>
                Gets or sets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.CursorVisibility">
            <summary>
                Gets or sets the CursorVisibility.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.SurfaceStyle">
            <summary>
                Gets or sets the SurfaceStyle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.SurfaceLayout">
            <summary>
                Gets or sets the SurfaceLayout.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.IsFullscreen">
            <summary>
                A value indicating whether the window is fullscreened.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.GameWindow.IsActive">
            <summary>
                A value indicating whether the window is active.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.SurfaceLayout.#ctor">
            <summary>
                Initializes a new SurfaceLayout class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.SurfaceLayout.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new SurfaceLayout class.
            </summary>
            <param name="canMinimize">The State.</param>
            <param name="canMaximize">The State.</param>
            <param name="canClose">The State.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.SurfaceLayout.CanMinimize">
            <summary>
                A value indicating whether the surface is minimizable.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.SurfaceLayout.CanMaximize">
            <summary>
                A value indicating whether the surface is maximizable.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.SurfaceLayout.CanClose">
            <summary>
                A value indicating whether the surface is closable.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.#ctor(Sharpex2D.Framework.UI.UIManager)">
            <summary>
                Initializes a new UIControl class.
            </summary>
            <param name="assignedUIManager">The assigned UIManager.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.UpdateBounds">
            <summary>
                Updates the Bounds of the UIControl.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.SetParent(Sharpex2D.Framework.UI.UIControl)">
            <summary>
                Sets the Parent.
            </summary>
            <param name="parent">The Parent.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.SetFocus">
            <summary>
                Sets the Focus for this UIControl.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.RemoveChild(Sharpex2D.Framework.UI.UIControl)">
            <summary>
                Removes a UIControl from the Childs.
            </summary>
            <param name="control">The UIControl.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.RemoveFocus">
            <summary>
                Removes the Focus of the UIControl.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.IsMouseDown(Sharpex2D.Framework.Input.MouseButtons)">
            <summary>
                Determines, if a MouseButton was pressed.
            </summary>
            <param name="mouseButton">The MouseButton.</param>
            <returns>True if pressed</returns>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.IsKeyDown(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a Key was pressed down.
            </summary>
            <param name="key">The Key.</param>
            <returns>True if pressed down</returns>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.IsKeyPressed(Sharpex2D.Framework.Input.Keys)">
            <summary>
                Determines, if a Key was pressed.
            </summary>
            <param name="key">The Key.</param>
            <returns>True if pressed</returns>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.OnRender(Sharpex2D.Framework.Rendering.Devices.RenderDevice)">
            <summary>
                Processes a Render call.
            </summary>
            <param name="renderer">The Renderer.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIControl.OnUpdate(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.RelativeMousePosition">
            <summary>
                Gets the relative mouse position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Bounds">
            <summary>
                Gets the Bounds of the UIControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Position">
            <summary>
                Sets or gets the Position of the UIControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Visible">
            <summary>
                A value indicating whether the UIControl is visible.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Enable">
            <summary>
                A value indicating whether the UIConrol is enabled.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.CanGetFocus">
            <summary>
                A value indicating whether the UIControl is available to get the focus.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Size">
            <summary>
                Sets or gets the Size of the UIControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.IsMouseHoverState">
            <summary>
                A value indicating whether the mouse is hovering the UIControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.HasFocus">
            <summary>
                A value indicating whether the UIControl has focus.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Guid">
            <summary>
                Gets the Guid-Identifer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Parent">
            <summary>
                Sets or gets the Parent UIControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.Children">
            <summary>
                Gets the children of the UIControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIControl.UIManager">
            <summary>
                Sets or gets the UIManager.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.Input.NumericBox.#ctor(Sharpex2D.Framework.UI.Input.NumericMode,Sharpex2D.Framework.UI.UIManager)">
            <summary>
                Initializes a new NumericBox.
            </summary>
            <param name="mode">The NumericMode.</param>
            <param name="assignedUIManager">The assigned UIManager.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.Input.NumericBox.OnUpdate(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.Input.NumericBox.ConvertBuffer">
            <summary>
                Converts the Buffer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.Input.NumericBox.IntValue">
            <summary>
                Sets or gets the IntValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.Input.NumericBox.DecimalValue">
            <summary>
                Sets or gets the DecimalValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.Input.NumericBox.DisplayValue">
            <summary>
                Gets the DisplayValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.Input.NumericBox.Mode">
            <summary>
                Sets or gets the mode.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.UI.Input.NumericMode.Int">
            <summary>
                Integer mode.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.UI.Input.NumericMode.Decimal">
            <summary>
                Decimal mode.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIBounds.#ctor">
            <summary>
                Initializes a new UIBounds class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIBounds.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new UIBounds class.
            </summary>
            <param name="x">The X-Coord.</param>
            <param name="y">The Y-Coord.</param>
            <param name="width">The Width.</param>
            <param name="height">The Height.</param>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIBounds.Width">
            <summary>
                Sets or gets the Width.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIBounds.Height">
            <summary>
                Sets or gets the Height.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIBounds.X">
            <summary>
                Sets or gets the X-Coord.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIBounds.Y">
            <summary>
                Sets or gets the Y-Coord.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.#ctor">
            <summary>
                Initializes a new UICollection class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Add(Sharpex2D.Framework.UI.UIControl)">
            <summary>
                Adds a new UIControl to the Collection.
            </summary>
            <param name="control">The Control.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Remove(Sharpex2D.Framework.UI.UIControl)">
            <summary>
                Removes a new UIControl from the Collection.
            </summary>
            <param name="control">The Control.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Get``1">
            <summary>
                Gets the spezified UIControl.
            </summary>
            <typeparam name="T">The Type.</typeparam>
            <returns>UIControl</returns>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Get(System.Guid)">
            <summary>
                Gets the UIControl spezified by its GUID.
            </summary>
            <param name="guid">The Guid.</param>
            <returns>UIControl</returns>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Clear">
            <summary>
                Clears the UIManager.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.GetAll">
            <summary>
                Gets all UIControls.
            </summary>
            <returns>UIControl Array</returns>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UIManager.Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Proceses a Render.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UIManager.Description">
            <summary>
                Sets or gets the Description.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UISize.#ctor">
            <summary>
                Initializes a new UISize class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.UI.UISize.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new UISize class.
            </summary>
            <param name="width">The Width.</param>
            <param name="height">The Height.</param>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UISize.Width">
            <summary>
                Gets the Width.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.UI.UISize.Height">
            <summary>
                Gets the Height.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.RenderTarget.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.RenderTarget.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.RenderTarget.#ctor(System.IntPtr)">
            <summary>
                Initializes a new RenderTarget class.
            </summary>
            <param name="handle">The WindowHandle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.RenderTarget.FromHandle(System.IntPtr)">
            <summary>
                Create a new RenderTarget from a specified handle.
            </summary>
            <param name="handle">The Handle.</param>
            <returns>RenderTarget</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Surface.RenderTarget.Create">
            <summary>
                Creates a new RenderTarget.
            </summary>
            <returns>RenderTarget</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.RenderTarget.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.RenderTarget.Handle">
            <summary>
                Gets the WindowHandle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.RenderTarget.Window">
            <summary>
                Gets the ISurfaceControl.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.RenderTarget.IsFullscreen">
            <summary>
                A value indicating whether the surface is running in fullscreen.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.RenderTarget.IsValid">
            <summary>
                A value indicating whether the RenderTarget is valid.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Surface.RenderTarget.Default">
            <summary>
                Gets the RenderTarget associated with the current process.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Surface.SurfaceStyle.Normal">
            <summary>
                Windowed.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Surface.SurfaceStyle.Fullscreen">
            <summary>
                Fullscreen.
            </summary>
        </member>
        <member name="P:Sharpex2D.IConfigurator.BackBuffer">
            <summary>
                Gets the BackBuffer.
            </summary>
        </member>
        <member name="P:Sharpex2D.IConfigurator.TargetFrameRate">
            <summary>
                Gets the TargetFrameRate.
            </summary>
        </member>
        <member name="P:Sharpex2D.IConfigurator.GameInstance">
            <summary>
                Gets the GameInstance.
            </summary>
        </member>
        <member name="P:Sharpex2D.IConfigurator.RenderTarget">
            <summary>
                Gets the RenderTarget.
            </summary>
        </member>
        <member name="P:Sharpex2D.IConfigurator.GameLoop">
            <summary>
                Gets the GameLoop.
            </summary>
        </member>
        <member name="M:Sharpex2D.InitializeHelper.GetGameClass">
            <summary>
                Gets the Game class.
            </summary>
            <returns>Game.</returns>
        </member>
        <member name="M:Sharpex2D.Configurator.#ctor(Sharpex2D.Framework.Game.Game,Sharpex2D.Framework.Surface.RenderTarget)">
            <summary>
                Initializes a new Configurator class.
            </summary>
            <param name="gameInstance">The GameInstance.</param>
            <param name="renderTarget">The RenderTarget.</param>
        </member>
        <member name="M:Sharpex2D.Configurator.#ctor(Sharpex2D.Framework.Rendering.BackBuffer,Sharpex2D.Framework.Game.Game,Sharpex2D.Framework.Surface.RenderTarget)">
            <summary>
                Initializes a new Configurator class.
            </summary>
            <param name="backbuffer">The BackBuffer.</param>
            <param name="gameInstance">The GameInstance.</param>
            <param name="renderTarget">The RenderTarget.</param>
        </member>
        <member name="M:Sharpex2D.Configurator.#ctor(System.Int32,Sharpex2D.Framework.Rendering.BackBuffer,Sharpex2D.Framework.Game.Game,Sharpex2D.Framework.Surface.RenderTarget)">
            <summary>
                Initializes a new Configurator class.
            </summary>
            <param name="targetFrameRate">The TargetFrameRate.</param>
            <param name="backbuffer">The BackBuffer.</param>
            <param name="gameInstance">The GameInstance.</param>
            <param name="renderTarget">The RenderTarget.</param>
        </member>
        <member name="M:Sharpex2D.Configurator.#ctor(System.Int32,Sharpex2D.Framework.Rendering.BackBuffer,Sharpex2D.Framework.Game.Timing.IGameLoop,Sharpex2D.Framework.Game.Game,Sharpex2D.Framework.Surface.RenderTarget)">
            <summary>
                Initializes a new Configurator class.
            </summary>
            <param name="targetFrameRate">The TargetFrameRate.</param>
            <param name="backbuffer">The BackBuffer.</param>
            <param name="gameLoop">The GameLoop.</param>
            <param name="gameInstance">The GameInstance.</param>
            <param name="renderTarget">The RenderTarget.</param>
        </member>
        <member name="M:Sharpex2D.Configurator.Default(Sharpex2D.Framework.Game.Game)">
            <summary>
                Gets the default initializer.
            </summary>
            <param name="gameInstance">The GameInstance.</param>
            <returns>SGLInitializer</returns>
        </member>
        <member name="P:Sharpex2D.Configurator.BackBuffer">
            <summary>
                Gets or sets the BackBuffer.
            </summary>
        </member>
        <member name="P:Sharpex2D.Configurator.TargetFrameRate">
            <summary>
                Gets or sets the TargetFrameRate.
            </summary>
        </member>
        <member name="P:Sharpex2D.Configurator.GameInstance">
            <summary>
                Gets the Game.
            </summary>
        </member>
        <member name="P:Sharpex2D.Configurator.RenderTarget">
            <summary>
                Gets the TargetHandle.
            </summary>
        </member>
        <member name="P:Sharpex2D.Configurator.GameLoop">
            <summary>
                Sets or gets the GameLoop.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.E">
            <summary>
                Natural base for logarithms.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.Log10E">
            <summary>
                Natural base for logarithms.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.Log2E">
            <summary>
                Natural base for logarithms.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.Pi">
            <summary>
                π.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.Epsilon">
            <summary>
                ε.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.PiOver2">
            <summary>
                π divided by 2.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.PiOver4">
            <summary>
                π divided by 4.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.TwoPi">
            <summary>
                Two times π.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.OneEightyOverPi">
            <summary>
                180 divided by π.
            </summary>
        </member>
        <member name="F:Sharpex2D.Framework.Math.MathHelper.PiOverOneEighty">
            <summary>
                π divided by 180.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Sin(System.Single)">
            <summary>
                Returns the sinus for the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Cos(System.Single)">
            <summary>
                Returns the cosinus for the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Sqrt(System.Single)">
            <summary>
                Returns the square root for the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Round(System.Single)">
            <summary>
                Rounds the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.ToAngle(System.Single,System.Single)">
            <summary>
                Calculates an angle out of given coordinates.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.ToAngle(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Calculates an angle out of given coordinates.
            </summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.ToVector(System.Single)">
            <summary>
                Converts an angle to a direction vector.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized
                barycentric (areal) coordinates.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="value3">The value3.</param>
            <param name="amount1">The amount1.</param>
            <param name="amount2">The amount2.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Performs a Catmull-Rom interpolation using the specified positions.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="value3">The value3.</param>
            <param name="value4">The value4.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Clamp(System.Single,System.Single,System.Single)">
            <summary>
                Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Distance(System.Single,System.Single)">
            <summary>
                Calculates the absolute value of the difference of two values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Performs a Hermite spline interpolation.
            </summary>
            <param name="value1">The value1.</param>
            <param name="tangent1">The tangent1.</param>
            <param name="value2">The value2.</param>
            <param name="tangent2">The tangent2.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Lerp(System.Single,System.Single,System.Single)">
            <summary>
                Linearly interpolates between two values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Abs(System.Single)">
            <summary>
                Returns the absolute value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Max(System.Single,System.Single)">
            <summary>
                Returns the greater of two values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Min(System.Single,System.Single)">
            <summary>
                Returns the lesser of two values.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>
                Interpolates between two values using a cubic equation.
            </summary>
            <param name="value1">The value1.</param>
            <param name="value2">The value2.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.ToDegrees(System.Single)">
            <summary>
                Converts radians to degrees.
            </summary>
            <param name="radians">The radians.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.ToRadians(System.Single)">
            <summary>
                Converts degrees to radians.
            </summary>
            <param name="degrees">The degrees.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.WrapAngle(System.Single)">
            <summary>
                Reduces a given angle to a value between π and -π.
            </summary>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.MathHelper.Pow(System.Single,System.Single)">
            <summary>
                Calculates x raised to the power of y.
            </summary>
            <param name="basis">The Basis.</param>
            <param name="exponent">The Exponent.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.#ctor(System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Sharpex2D.Framework.Math.Vector2"/> struct.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.#ctor(System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Sharpex2D.Framework.Math.Vector2"/> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Normalize">
            <summary>
                Normalizes this vector.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Translate(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Translates the vector.
            </summary>
            <param name="translation">The translation.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Truncate(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Truncates the specified vector and removes all decimal places.
            </summary>
            <param name="a">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Normalize(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Normalizes the specified vector.
            </summary>
            <param name="a">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Abs(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Returns the absolute values of the specified vector.
            </summary>
            <param name="a">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Clamp(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Clamps the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Lerp(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Linear interpolation between the two values.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Rotate(Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Rotates the specified vector.
            </summary>
            <param name="vector">The vector.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Round(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Rounds the specified vector.
            </summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.SmoothStep(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Interpolates between two values using a cubic equation.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Min(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Returns the lesser components of the two values.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Max(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Returns the greater components of the two values.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Dot(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Returns the dot product for the specified vectors.
            </summary>
            <param name="a">The first value.</param>
            <param name="b">The second value.</param>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Reflect(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Reflects the specified vector.
            </summary>
            <param name="vector">The vector.</param>
            <param name="normal">The normal.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Negate(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Negates the specified vector.
            </summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.Equals(System.Object)">
            <summary>
                Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.GetHashCode">
            <summary>
                Returns a hash code for this instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.ToString">
            <summary>
                Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Equality(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator ==.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Inequality(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator !=.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Addition(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator +.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Subtraction(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator -.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_UnaryNegation(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator -.
            </summary>
            <param name="a">The vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Multiply(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator *.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Multiply(Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Implements the operator *.
            </summary>
            <param name="a">The vector.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Division(Sharpex2D.Framework.Math.Vector2,Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Implements the operator /.
            </summary>
            <param name="a">The first vector.</param>
            <param name="b">The second vector.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Math.Vector2.op_Division(Sharpex2D.Framework.Math.Vector2,System.Single)">
            <summary>
                Implements the operator /.
            </summary>
            <param name="a">The vector.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.Zero">
            <summary>
                Returns a null vector.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.UnitX">
            <summary>
                Returns a vector that represents the x-axis.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.UnitY">
            <summary>
                Returns a vector that represents the y-axis.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.X">
            <summary>
                Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.Y">
            <summary>
                Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.Length">
            <summary>
                Gets the length.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Math.Vector2.LengthSquared">
            <summary>
                Gets the length squared.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.Sound.Dispose">
            <summary>
                Disposes the object.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.Sound.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">The Disposing State.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.Sound.#ctor">
            <summary>
                Initializes a new Sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.Sound.#ctor(System.String)">
            <summary>
                Initializes a new Sound based on the resource file.
            </summary>
            <param name="file">The File.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.Sound.ResourcePath">
            <summary>
                Sets or Gets the resource path.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.Sound.Data">
            <summary>
                Gets the Data.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.Sound.IsInitialized">
            <summary>
                Determines, if the Sound is initialized.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.#ctor(Sharpex2D.Framework.Audio.ISoundInitializer)">
            <summary>
                Initializes a new SoundManager class.
            </summary>
            <param name="soundInitializer">The ISoundInitializer.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.Play(Sharpex2D.Framework.Audio.Sound)">
            <summary>
                Plays the sound.
            </summary>
            <param name="sound">The Soundfile.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.Play(Sharpex2D.Framework.Audio.Sound,Sharpex2D.Framework.Audio.PlayMode)">
            <summary>
                Plays the sound.
            </summary>
            <param name="sound">The Soundfile.</param>
            <param name="playMode">The PlayMode.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.Resume">
            <summary>
                Resumes a sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.Pause">
            <summary>
                Pause a sound.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.Seek(System.Int64)">
            <summary>
                Seeks a sound to a specified position.
            </summary>
            <param name="position">The Position.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundManager.CreateNew">
            <summary>
                Creates a new SoundManager.
            </summary>
            <returns>SoundManager.</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.Balance">
            <summary>
                Sets or gets the Balance.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.Volume">
            <summary>
                Sets or gets the Volume.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.Position">
            <summary>
                Sets or gets the Position.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.IsPlaying">
            <summary>
                A value indicating whether the SoundProvider is playing.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.Length">
            <summary>
                Gets the sound length.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Audio.SoundManager.Muted">
            <summary>
                A value indicating whether the sound is muted.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundProviderNotInitializedException.#ctor">
            <summary>
                Initializes a new SoundProviderNotInitializedException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundProviderNotInitializedException.#ctor(System.String)">
            <summary>
                Initializes a new SoundProviderNotInitializedException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundProviderNotInitializedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new SoundProviderNotInitializedException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Audio.SoundProviderNotInitializedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new SoundProviderNotInitializedException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginException.#ctor">
            <summary>
                Initializes a new PluginException class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginException.#ctor(System.String)">
            <summary>
                Initializes a new PluginException class.
            </summary>
            <param name="message">The Message.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new PluginException class.
            </summary>
            <param name="message">The Message.</param>
            <param name="inner">The InnerException.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Plugin.PluginException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
                Initializes a new PluginException class.
            </summary>
            <param name="serializationInfo">The SerializationInfo.</param>
            <param name="context">The StreamContext.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new Color.
            </summary>
            <param name="r">The RedValue.</param>
            <param name="g">The GreenValue.</param>
            <param name="b">The BlueValue.</param>
            <param name="a">The AlphaValue.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Generates a Color from the given Values.
            </summary>
            <param name="a">The AlphaValue.</param>
            <param name="r">The RedValue.</param>
            <param name="g">The GreenValue.</param>
            <param name="b">The BlueValue.</param>
            <returns>Color</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.op_Inequality(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                The != Operator.
            </summary>
            <param name="a">The FirstColor.</param>
            <param name="b">The SecondColor.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.op_Equality(Sharpex2D.Framework.Rendering.Color,Sharpex2D.Framework.Rendering.Color)">
            <summary>
                The == Operator.
            </summary>
            <param name="a">The FirstColor.</param>
            <param name="b">The SecondColor.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.op_Multiply(Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                The * Operator.
            </summary>
            <param name="a">The FirstColor.</param>
            <param name="scale">The Scalevalue.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.Equals(Sharpex2D.Framework.Rendering.Color)">
            <summary>
                Determines, if this Object is equal with another.
            </summary>
            <param name="color">The Color.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.Equals(System.Object)">
            <summary>
                Determines, if this Object is equal with another.
            </summary>
            <param name="obj">The Object.</param>
            <returns>Bool.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.GetHashCode">
            <summary>
                Gets the HashCode for the current Color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.ToString">
            <summary>
                Color Converted to String.
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.Multiply(Sharpex2D.Framework.Rendering.Color,System.Single)">
            <summary>
                Multiplies the specified color.
            </summary>
            <param name="value">The value.</param>
            <param name="scale">The scale.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Color.ToColor(System.String)">
            <summary>
                Counterpart for ToString.
            </summary>
            <param name="stringColor">The ColorString.</param>
            <returns>Color</returns>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Color.R">
            <summary>
                Gets or sets the RedValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Color.G">
            <summary>
                Gets or sets the GreenValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Color.B">
            <summary>
                Gets or sets the BlueValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Color.A">
            <summary>
                Gets or sets the AlphaValue.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.BackBuffer.#ctor(System.Int32,System.Int32)">
            <summary>
                Initializes a new BackBuffer class.
            </summary>
            <param name="width">The Width.</param>
            <param name="height">The Height.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.BackBuffer.#ctor(Sharpex2D.Framework.Math.Vector2)">
            <summary>
                Initializes a new BackBuffer class.
            </summary>
            <param name="size">The Size.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.BackBuffer.Scaling">
            <summary>
                Sets or gets the Scaling Value.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.BackBuffer.Width">
            <summary>
                Gets the Width.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.BackBuffer.Height">
            <summary>
                Gets the Height.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GraphicsDevice.#ctor(Sharpex2D.Framework.Surface.RenderTarget)">
            <summary>
                Initializes a new GraphicsDeivce.
            </summary>
            <param name="renderTarget">The RenderTarget.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GraphicsDevice.Dispose">
            <summary>
                Disposes the GraphicsDevice.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.GraphicsDevice.Dispose(System.Boolean)">
            <summary>
                Disposes the object.
            </summary>
            <param name="disposing">Indicates whether managed resources should be disposed.</param>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.IsDisposed">
            <summary>
                Determines if the graphics device is disposed.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.BackBuffer">
            <summary>
                Sets or gets the graphic resolution.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.RenderTarget">
            <summary>
                Sets or gets the RenderTarget.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.Scale">
            <summary>
                Gets the ScaleValue.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.ClearColor">
            <summary>
                Gets or sets the Clear Color.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.GraphicsDevice.RefreshRate">
            <summary>
                Gets the RefreshRate.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.Construct">
            <summary>
                Called if the SceneManager should get initialized.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.Update(Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Updates the object.
            </summary>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.Render(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Game.GameTime)">
            <summary>
                Processes a Render.
            </summary>
            <param name="renderer">The Renderer.</param>
            <param name="gameTime">The GameTime.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.#ctor">
            <summary>
                Initializes a new SceneManager class.
            </summary>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.Get``1">
            <summary>
                Gets a specified scene.
            </summary>
            <typeparam name="T">The Scene.</typeparam>
            <returns>Scene.</returns>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.SetScene(Sharpex2D.Framework.Rendering.Scene.Scene)">
            <summary>
                Sets the ActiveScene.
            </summary>
            <param name="scene">The Scene.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.AddScene(Sharpex2D.Framework.Rendering.Scene.Scene)">
            <summary>
                Adds a new Scene.
            </summary>
            <param name="scene">The Scene.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.RemoveScene(Sharpex2D.Framework.Rendering.Scene.Scene)">
            <summary>
                Removes a Scene.
            </summary>
            <param name="scene">The Scene.</param>
        </member>
        <member name="M:Sharpex2D.Framework.Rendering.Scene.SceneManager.ClearScenes">
            <summary>
                Removes all Scenes.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.SceneManager.Guid">
            <summary>
                Sets or gets the Guid of the Component.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.SceneManager.Order">
            <summary>
                Gets the Order.
            </summary>
        </member>
        <member name="P:Sharpex2D.Framework.Rendering.Scene.SceneManager.ActiveScene">
            <summary>
                Gets the ActiveScene.
            </summary>
        </member>
        <member name="T:Sharpex2D.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Sharpex2D.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Sharpex2D.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="F:Sharpex2D.SGL.GameInstance">
            <summary>
                Current Game Instance.
            </summary>
        </member>
        <member name="M:Sharpex2D.SGL.#cctor">
            <summary>
                Initializes a new SGL class.
            </summary>
        </member>
        <member name="M:Sharpex2D.SGL.Initialize">
            <summary>
                Initializes SGL.
            </summary>
        </member>
        <member name="M:Sharpex2D.SGL.Initialize(Sharpex2D.IConfigurator)">
            <summary>
                Initializes SGL.
            </summary>
            <param name="configurator">The Configurator.</param>
        </member>
        <member name="M:Sharpex2D.SGL.Run(Sharpex2D.Framework.Rendering.Devices.RenderDevice,Sharpex2D.Framework.Audio.ISoundInitializer)">
            <summary>
                Runs SGL based on the specific initialized options.
            </summary>
            <param name="renderDevice">The RenderDevice.</param>
            <param name="soundInitializer">The ISoundInitializer.</param>
        </member>
        <member name="M:Sharpex2D.SGL.Shutdown">
            <summary>
                Closes the current session.
            </summary>
        </member>
        <member name="M:Sharpex2D.SGL.Restart(System.String)">
            <summary>
                Restarts the game.
            </summary>
            <param name="parameters">The Parameters.</param>
        </member>
        <member name="P:Sharpex2D.SGL.GraphicsDevice">
            <summary>
                Current GraphicsDevice.
            </summary>
        </member>
        <member name="P:Sharpex2D.SGL.RenderDevice">
            <summary>
                The Current Renderer.
            </summary>
        </member>
        <member name="P:Sharpex2D.SGL.Version">
            <summary>
                Gets the Version of SGL.
            </summary>
        </member>
        <member name="P:Sharpex2D.SGL.State">
            <summary>
                Gets the current state.
            </summary>
        </member>
        <member name="P:Sharpex2D.SGL.Components">
            <summary>
                ComponentManager Instance.
            </summary>
        </member>
        <member name="F:Sharpex2D.EngineState.NotInitialized">
            <summary>
                SGL is not initialized.
            </summary>
        </member>
        <member name="F:Sharpex2D.EngineState.Initializing">
            <summary>
                SGL is currently initializing.
            </summary>
        </member>
        <member name="F:Sharpex2D.EngineState.Initialized">
            <summary>
                SGL is initialized.
            </summary>
        </member>
        <member name="F:Sharpex2D.EngineState.Running">
            <summary>
                SGL is running.
            </summary>
        </member>
    </members>
</doc>
